{"version":3,"sources":["../src/color_mode_discrete.js"],"names":["_","ColorModeDiscrete","scope","panelCtrl","ctrl","panel","values","thresholds","color","tooltips","i","length","j","value","push","tooltip","notMatched","getMatchedThreshold","threshold","index","getThreshold","isAllValuesNulls","getDiscreteColor","cardsData","noColorDefined","cards","nullPointMode","k","interval"],"mappings":"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","file":"color_mode_discrete.js","sourcesContent":["import _ from 'lodash';\r\n\r\n// Helper methods to handle discrete color mode\r\nexport class ColorModeDiscrete {\r\n  constructor(scope) {\r\n    this.scope = scope;\r\n    this.panelCtrl = scope.ctrl;\r\n    this.panel = scope.ctrl.panel;\r\n  }\r\n\r\n  // get tooltip for each value ordered by thresholds priority\r\n  convertValuesToTooltips(values) {\r\n    let thresholds = this.panel.color.thresholds;\r\n    let tooltips = [];\r\n\r\n    for (let i = 0; i < thresholds.length; i++) {\r\n      for (let j = 0; j < values.length; j++) {\r\n        if (values[j] == thresholds[i].value) {\r\n          tooltips.push({\r\n            \"tooltip\": thresholds[i].tooltip?thresholds[i].tooltip:values[j],\r\n            \"color\": thresholds[i].color\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return tooltips;\r\n  }\r\n\r\n\r\n  getNotMatchedValues(values) {\r\n    let notMatched = [];\r\n    for (let j = 0; j < values.length; j++) {\r\n      if (!this.getMatchedThreshold(values[j])) {\r\n        notMatched.push(values[j]);\r\n      }\r\n    }\r\n    return notMatched;\r\n  }\r\n\r\n  getNotColoredValues(values) {\r\n    let notMatched = [];\r\n    for (let j = 0; j < values.length; j++) {\r\n      let threshold = this.getMatchedThreshold(values[j]);\r\n      if (!threshold || !threshold.color || threshold.color == \"\") {\r\n        notMatched.push(values[j]);\r\n      }\r\n    }\r\n    return notMatched;\r\n  }\r\n\r\n\r\n  getDiscreteColor(index) {\r\n    let color = this.getThreshold(index).color;\r\n    if (!color || color == \"\") {\r\n      return 'rgba(0,0,0,1)';\r\n    }\r\n    return color;\r\n  }\r\n\r\n  // returns color from first matched thresold in order from 0 to thresholds.length\r\n  getBucketColor(values) {\r\n    let thresholds = this.panel.color.thresholds;\r\n\r\n    if (!values || values.length == 0) {\r\n      // treat as null value\r\n      return this.getMatchedThreshold(null).color;\r\n    }\r\n\r\n    if (values.length == 1) {\r\n      let threshold = this.getMatchedThreshold(values[0]);\r\n      if (!threshold || !threshold.color || threshold.color == \"\") {\r\n        return 'rgba(0,0,0,1)';\r\n      } else {\r\n        return threshold.color;\r\n      }\r\n    }\r\n\r\n    let isAllValuesNulls = true;\r\n    for (let j = 0; j < values.length; j++) {\r\n      if (values[j] != null) {\r\n        isAllValuesNulls = false;\r\n      }\r\n    }\r\n    if (isAllValuesNulls) {\r\n      return this.getMatchedThreshold(null).color;\r\n    }\r\n\r\n    for (let i = 0; i < thresholds.length; i++) {\r\n      for (let j = 0; j < values.length; j++) {\r\n        if (values[j] == thresholds[i].value) {\r\n          return this.getDiscreteColor(i);\r\n        }\r\n      }\r\n    }\r\n    return 'rgba(0,0,0,1)';\r\n  }\r\n\r\n  updateCardsValuesHasColorInfo() {\r\n    if (!this.panelCtrl.cardsData) {\r\n      return\r\n    }\r\n    this.panelCtrl.cardsData.noColorDefined = false;\r\n    let cards = this.panelCtrl.cardsData.cards;\r\n    for (let i=0; i<cards.length; i++) {\r\n      cards[i].noColorDefined = false;\r\n      let values = cards[i].values;\r\n      for (let j=0; j<values.length; j++) {\r\n        let threshold = this.getMatchedThreshold(values[j]);\r\n        if (!threshold || !threshold.color || threshold.color == \"\") {\r\n          cards[i].noColorDefined = true;\r\n          this.panelCtrl.cardsData.noColorDefined = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMatchedThreshold(value) {\r\n    if (value == null) {\r\n      if (this.panel.nullPointMode == 'as empty') {\r\n        // FIXME: make this explicit for user\r\n        // Right now this color never used because null as empty handles in getCardOpacity method.\r\n        return {\r\n          \"color\": \"rgba(0,0,0,0)\",\r\n          \"value\": \"null\",\r\n          \"tooltip\": \"null\",\r\n        }\r\n      } else {\r\n        value = 0;\r\n      }\r\n    }\r\n\r\n    let thresholds = this.panel.color.thresholds;\r\n    for (let k = 0; k < thresholds.length; k++) {\r\n      if (value == thresholds[k].value) {\r\n        return thresholds[k];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getThreshold(index) {\r\n    let thresholds = this.panel.color.thresholds;\r\n    if (index < 0 || index >= thresholds.length == null) {\r\n      return {\r\n        \"color\": \"rgba(0,0,0,0)\",\r\n        \"value\": \"null\",\r\n        \"tooltip\": \"null\",\r\n      }\r\n    }\r\n    return thresholds[index];\r\n  }\r\n\r\n  roundIntervalCeil(interval) {\r\n    switch (true) {\r\n      case interval <= 10:\r\n        return 10; // 0.01s\r\n      case interval <= 20:\r\n        return 20; // 0.02s\r\n      case interval <= 50:\r\n        return 50; // 0.05s\r\n      case interval <= 100:\r\n        return 100; // 0.1s\r\n      case interval <= 200:\r\n        return 200; // 0.2s\r\n      case interval <= 500:\r\n        return 500; // 0.5s\r\n      case interval <= 1000:\r\n        return 1000; // 1s\r\n      case interval <= 2000:\r\n        return 2000; // 2s\r\n      case interval <= 5000:\r\n        return 5000; // 5s\r\n      case interval <= 10000:\r\n        return 10000; // 10s\r\n      case interval <= 15000:\r\n        return 15000; // 15s\r\n      case interval <= 20000:\r\n        return 20000; // 20s\r\n      case interval <= 30000:\r\n        return 30000; // 30s\r\n      case interval <= 60000:\r\n        return 60000; // 1m\r\n      case interval <= 120000:\r\n        return 120000; // 2m\r\n      case interval <= 300000:\r\n        return 300000; // 5m\r\n      case interval <= 600000:\r\n        return 600000; // 10m\r\n      case interval <= 900000:\r\n        return 900000; // 15m\r\n      case interval <= 1200000:\r\n        return 1200000; // 20m\r\n      case interval <= 1800000:\r\n        return 1800000; // 30m\r\n      case interval <= 3600000:\r\n        return 3600000; // 1h\r\n      case interval <= 7200000:\r\n        return 7200000; // 2h\r\n      case interval <= 10800000:\r\n        return 10800000; // 3h\r\n      case interval <= 21600000:\r\n        return 21600000; // 6h\r\n      case interval <= 43200000:\r\n        return 43200000; // 12h\r\n      case interval <= 86400000:\r\n        return 86400000; // 1d\r\n      case interval <= 604800000:\r\n        return 604800000; // 1w\r\n      case interval <= 2592000000:\r\n        return 2592000000; // 30d\r\n      default:\r\n        return 31536000000; // 1y\r\n    }\r\n  }\r\n}\r\n"]}