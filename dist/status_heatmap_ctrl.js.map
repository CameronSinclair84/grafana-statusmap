{"version":3,"sources":["../src/status_heatmap_ctrl.js"],"names":["MetricsPanelCtrl","_","contextSrv","kbn","rendering","statusHeatmapOptionsEditor","ColorModeDiscrete","CANVAS","SVG","VALUE_INDEX","TIME_INDEX","panelDefaults","color","mode","cardColor","colorScale","exponent","colorScheme","defaultColor","thresholds","cards","cardMinWidth","cardSpacing","cardRound","xAxis","show","showWeekends","minBucketWidthToShowWeekends","showCrosshair","labelFormat","yAxis","tooltip","legend","data","unitFormat","decimals","nullPointMode","yAxisSort","highlightCards","useMax","renderer","colorSchemes","name","value","invert","colorModes","opacityScales","StatusHeatmapCtrl","$scope","$injector","$rootScope","timeSrv","onRenderComplete","graph","chartWidth","renderingCompleted","calculateInterval","panelWidth","Math","ceil","$","window","width","panel","gridPos","w","max","minCardWidth","minSpacing","maxCardsCount","intervalMs","rangeMs","range","to","valueOf","from","discreteHelper","roundIntervalCeil","lowLimitMs","intervalOverride","interval","templateSrv","replace","scopedVars","datasource","slice","interval_to_ms","secondsToHms","onDataReceived","dataList","cardsData","convertToCards","render","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","onRender","multipleValues","noColorDefined","updateCardsValuesHasColorInfo","onCardColorChange","newColor","onDataError","postRefresh","onEditorAddThreshold","push","onEditorRemoveThreshold","index","splice","onEditorAddThreeLights","link","scope","elem","attrs","ctrl","xBucketSize","yBucketSize","maxValue","minValue","length","targetIndex","i","ts","target","undefined","targets","keys","min","map","d","datapoints","j","card","id","values","si","s","datapoint","x","y","defaultsDeep","dataWarnings","title","tip","events","on","templateUrl"],"mappings":"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","file":"status_heatmap_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport { contextSrv } from 'app/core/core';\nimport kbn from 'app/core/utils/kbn';\n\nimport './color_legend';\nimport rendering from './rendering';\n// import aggregates, { aggregatesMap } from './aggregates';\n// import fragments, { fragmentsMap } from './fragments';\n// import { labelFormats } from './xAxisLabelFormats';\nimport {statusHeatmapOptionsEditor} from './options_editor';\nimport {ColorModeDiscrete} from \"./color_mode_discrete\";\n\nconst CANVAS = 'CANVAS';\nconst SVG = 'SVG';\nconst VALUE_INDEX = 0,\n      TIME_INDEX = 1;\n\nconst panelDefaults = {\n  // aggregate: aggregates.AVG,\n  // fragment: fragments.HOUR,\n  color: {\n    mode: 'spectrum',\n    cardColor: '#b4ff00',\n    colorScale: 'sqrt',\n    exponent: 0.5,\n    colorScheme: 'interpolateGnYlRd',\n    // discrete mode settings\n    defaultColor: '#757575',\n    thresholds: [] // manual colors\n  },\n  cards: {\n    cardMinWidth: 5,\n    cardSpacing: 2,\n    cardRound: null\n  },\n  xAxis: {\n    show: true,\n    showWeekends: true,\n    minBucketWidthToShowWeekends: 4,\n    showCrosshair: true,\n    labelFormat: '%a %m/%d'\n  },\n  yAxis: {\n    show: true,\n    showCrosshair: false\n  },\n  tooltip: {\n    show: true\n  },\n  legend: {\n    show: true\n  },\n  data: {\n    unitFormat: 'short',\n    decimals: null\n  },\n  // how null points should be handled\n  nullPointMode: 'as empty',\n  yAxisSort: 'metrics',\n  highlightCards: true,\n  useMax: true\n};\n\nconst renderer = CANVAS;\n\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n  { name: 'GnYlRd', value: 'interpolateGnYlRd', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' }\n];\n\nlet colorModes = ['opacity', 'spectrum', 'discrete'];\nlet opacityScales = ['linear', 'sqrt'];\n\nexport class StatusHeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  constructor($scope, $injector, $rootScope, timeSrv) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n\n    // default graph width for discrete card width calculation\n    this.graph = {\n      \"chartWidth\" : -1\n    };\n\n    this.multipleValues = false;\n    this.noColorDefined = false;\n\n    this.discreteHelper = new ColorModeDiscrete($scope);\n\n    this.dataWarnings = {\n      \"noColorDefined\": {\n        title: 'Data has value with undefined color',\n        tip: 'Check metric values, color values or define a new color',\n      },\n      \"multipleValues\": {\n        title: 'Data has multiple values for one target',\n        tip: 'Change targets definitions or set \"use max value\"',\n      }\n    };\n\n    this.events.on('data-received', this.onDataReceived);\n    this.events.on('data-snapshot-load', this.onDataReceived);\n    this.events.on('data-error', this.onDataError);\n    this.events.on('init-edit-mode', this.onInitEditMode);\n    this.events.on('render', this.onRender);\n    this.events.on('refresh', this.postRefresh);\n    // custom event from rendering.js\n    this.events.on('render-complete', this.onRenderComplete);\n  }\n\n  onRenderComplete = (data) => {\n    this.graph.chartWidth = data.chartWidth;\n    this.renderingCompleted();\n  };\n\n  // override calculateInterval for discrete color mode\n  calculateInterval = () => {\n    let panelWidth = Math.ceil($(window).width() * (this.panel.gridPos.w / 24));\n    // approximate chartWidth because y axis ticks not rendered yet on first data receive.\n    let chartWidth = _.max([\n        panelWidth - 200,\n        panelWidth/2\n      ]);\n\n    let minCardWidth = this.panel.cards.cardMinWidth;\n    let minSpacing = this.panel.cards.cardSpacing;\n    let maxCardsCount = Math.ceil((chartWidth-minCardWidth) / (minCardWidth + minSpacing));\n\n    let intervalMs;\n    let rangeMs = this.range.to.valueOf() - this.range.from.valueOf();\n\n    // this is minimal interval! kbn.round_interval will lower it.\n    intervalMs = this.discreteHelper.roundIntervalCeil(rangeMs / maxCardsCount);\n\n    // Calculate low limit of interval\n    let lowLimitMs = 1; // 1 millisecond default low limit\n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    if (intervalOverride) {\n      if (intervalOverride[0] === '>') {\n        intervalOverride = intervalOverride.slice(1);\n      }\n      lowLimitMs = kbn.interval_to_ms(intervalOverride);\n    }\n\n    if (lowLimitMs > intervalMs) {\n      intervalMs = lowLimitMs;\n    }\n\n    this.intervalMs = intervalMs;\n    this.interval = kbn.secondsToHms(intervalMs / 1000);\n  };\n\n  onDataReceived = (dataList) => {\n    this.data      = dataList;\n    this.cardsData = this.convertToCards(this.data);\n\n    this.render();\n  };\n\n  onInitEditMode = () => {\n    this.addEditorTab('Options', statusHeatmapOptionsEditor, 2);\n    this.unitFormats = kbn.getUnitFormats();\n  };\n\n  onRender = () => {\n    if (!this.data) { return; }\n\n    this.multipleValues = false;\n    if (!this.panel.useMax) {\n      if (this.cardsData) {\n        this.multipleValues = this.cardsData.multipleValues;\n      }\n    }\n\n    this.noColorDefined = false;\n    if (this.panel.color.mode === 'discrete') {\n      this.discreteHelper.updateCardsValuesHasColorInfo();\n      if (this.cardsData) {\n        this.noColorDefined = this.cardsData.noColorDefined;\n      }\n    }\n  };\n\n  onCardColorChange = (newColor) => {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  };\n\n  onDataError = () => {\n    this.data = [];\n    this.render();\n  };\n\n  postRefresh = () => {\n    this.noColorDefined = false;\n  };\n\n  onEditorAddThreshold = () => {\n    this.panel.color.thresholds.push({ color: this.panel.defaultColor });\n    this.render();\n  };\n\n  onEditorRemoveThreshold = (index) => {\n    this.panel.color.thresholds.splice(index, 1);\n    this.render();\n  };\n\n  onEditorAddThreeLights = () => {\n    this.panel.color.thresholds.push({color: \"red\", value: 2, tooltip: \"error\" });\n    this.panel.color.thresholds.push({color: \"yellow\", value: 1, tooltip: \"warning\" });\n    this.panel.color.thresholds.push({color: \"green\", value: 0, tooltip: \"ok\" });\n    this.render();\n  };\n\n  link = (scope, elem, attrs, ctrl) => {\n    rendering(scope, elem, attrs, ctrl);\n  };\n\n  // group values into buckets by target\n  convertToCards = (data) => {\n    let cardsData = {\n      cards: [],\n      xBucketSize: 0,\n      yBucketSize: 0,\n      maxValue: 0,\n      minValue: 0,\n      multipleValues: false,\n      noColorDefined: false,\n    };\n\n    if (!data || data.length == 0) { return cardsData;}\n\n    // collect uniq targets and their indexes in data array\n    cardsData.targetIndex = {};\n    for (let i = 0; i < data.length; i++) {\n      let ts = data[i];\n      let target = ts.target;\n      if (cardsData.targetIndex[target] == undefined) {\n        cardsData.targetIndex[target] = []\n      }\n      cardsData.targetIndex[target].push(i);\n    }\n\n    // TODO add some logic for targets heirarchy\n    cardsData.targets = _.keys(cardsData.targetIndex);\n    cardsData.yBucketSize = cardsData.targets.length;\n    cardsData.xBucketSize = _.min(_.map(data, d => d.datapoints.length));\n\n    // Collect all values for each bucket from datapoints with similar target.\n    for(let i = 0; i < cardsData.targets.length; i++) {\n      let target = cardsData.targets[i];\n\n      for (let j = 0; j < cardsData.xBucketSize; j++) {\n        let card = {\n          id: i*cardsData.xBucketSize + j,\n          values: [],\n          multipleValues: false,\n          noColorDefined: false,\n        };\n\n        // collect values from all timeseries with target\n        for (let si = 0; si < cardsData.targetIndex[target].length; si++) {\n          let s = data[cardsData.targetIndex[target][si]];\n          let datapoint = s.datapoints[j];\n          if (card.values.length === 0) {\n            card.x = datapoint[TIME_INDEX];\n            card.y = s.target;\n          }\n          card.values.push(datapoint[VALUE_INDEX]);\n        }\n        card.minValue = _.min(card.values);\n        card.maxValue = _.max(card.values);\n        if (card.values.length > 1) {\n          cardsData.multipleValues = true;\n          card.multipleValues = true;\n          card.value = card.maxValue; // max value by default\n        } else {\n          card.value = card.maxValue; // max value by default\n        }\n\n        if (cardsData.maxValue < card.maxValue)\n          cardsData.maxValue = card.maxValue;\n\n        if (cardsData.minValue > card.minValue)\n          cardsData.minValue = card.minValue;\n\n        cardsData.cards.push(card);\n      }\n    }\n\n    return cardsData;\n  };\n}\n"]}