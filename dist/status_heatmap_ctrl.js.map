{"version":3,"sources":["../src/status_heatmap_ctrl.js"],"names":["MetricsPanelCtrl","_","contextSrv","kbn","rendering","statusHeatmapOptionsEditor","ColorModeDiscrete","CANVAS","SVG","VALUE_INDEX","TIME_INDEX","panelDefaults","color","mode","cardColor","colorScale","exponent","colorScheme","defaultColor","thresholds","cards","cardMinWidth","cardVSpacing","cardHSpacing","cardRound","xAxis","show","showWeekends","minBucketWidthToShowWeekends","showCrosshair","labelFormat","yAxis","tooltip","legend","data","unitFormat","decimals","nullPointMode","yAxisSort","highlightCards","useMax","renderer","colorSchemes","name","value","invert","colorModes","opacityScales","StatusHeatmapCtrl","$scope","$injector","$rootScope","timeSrv","annotationsSrv","graph","chartWidth","renderingCompleted","panelWidth","Math","ceil","$","window","width","panel","gridPos","w","max","minCardWidth","minSpacing","maxCardsCount","intervalMs","rangeMs","range","to","valueOf","from","discreteHelper","roundIntervalCeil","lowLimitMs","intervalOverride","interval","templateSrv","replace","scopedVars","datasource","slice","interval_to_ms","secondsToHms","annotationsPromise","getAnnotations","dashboard","datasourcePromises","then","r","dataList","cardsData","convertToCards","result","loading","annotations","length","render","addEditorTab","unitFormats","getUnitFormats","multipleValues","noColorDefined","updateCardsValuesHasColorInfo","newColor","push","index","splice","scope","elem","attrs","ctrl","xBucketSize","yBucketSize","maxValue","minValue","targets","targetIndex","map","d","i","target","concat","toArray","keys","datapoints","j","card","id","values","y","x","si","s","datapoint","min","defaultsDeep","dataWarnings","title","tip","events","on","onDataReceived","onDataError","onInitEditMode","onRender","postRefresh","onRenderComplete"],"mappings":"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","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport { contextSrv } from 'app/core/core';\nimport kbn from 'app/core/utils/kbn';\n\nimport './color_legend';\nimport rendering from './rendering';\n// import aggregates, { aggregatesMap } from './aggregates';\n// import fragments, { fragmentsMap } from './fragments';\n// import { labelFormats } from './xAxisLabelFormats';\nimport {statusHeatmapOptionsEditor} from './options_editor';\nimport {ColorModeDiscrete} from \"./color_mode_discrete\";\n\nconst CANVAS = 'CANVAS';\nconst SVG = 'SVG';\nconst VALUE_INDEX = 0,\n      TIME_INDEX = 1;\n\nconst panelDefaults = {\n  // aggregate: aggregates.AVG,\n  // fragment: fragments.HOUR,\n  color: {\n    mode: 'spectrum',\n    cardColor: '#b4ff00',\n    colorScale: 'sqrt',\n    exponent: 0.5,\n    colorScheme: 'interpolateGnYlRd',\n    // discrete mode settings\n    defaultColor: '#757575',\n    thresholds: [] // manual colors\n  },\n  cards: {\n    cardMinWidth: 5,\n    cardVSpacing: 2,\n    cardHSpacing: 2,\n    cardRound: null\n  },\n  xAxis: {\n    show: true,\n    showWeekends: true,\n    minBucketWidthToShowWeekends: 4,\n    showCrosshair: true,\n    labelFormat: '%a %m/%d'\n  },\n  yAxis: {\n    show: true,\n    showCrosshair: false\n  },\n  tooltip: {\n    show: true\n  },\n  legend: {\n    show: true\n  },\n  data: {\n    unitFormat: 'short',\n    decimals: null\n  },\n  // how null points should be handled\n  nullPointMode: 'as empty',\n  yAxisSort: 'metrics',\n  highlightCards: true,\n  useMax: true\n};\n\nconst renderer = CANVAS;\n\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n  { name: 'GnYlRd', value: 'interpolateGnYlRd', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' }\n];\n\nlet colorModes = ['opacity', 'spectrum', 'discrete'];\nlet opacityScales = ['linear', 'sqrt'];\n\nexport class StatusHeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  /** @ngInject */\n  constructor($scope, $injector, $rootScope, timeSrv, annotationsSrv) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n\n    // default graph width for discrete card width calculation\n    this.graph = {\n      \"chartWidth\" : -1\n    };\n\n    this.multipleValues = false;\n    this.noColorDefined = false;\n\n    this.discreteHelper = new ColorModeDiscrete($scope);\n\n    this.dataWarnings = {\n      \"noColorDefined\": {\n        title: 'Data has value with undefined color',\n        tip: 'Check metric values, color values or define a new color',\n      },\n      \"multipleValues\": {\n        title: 'Data has multiple values for one target',\n        tip: 'Change targets definitions or set \"use max value\"',\n      }\n    };\n\n    this.annotations = [];\n    this.annotationsSrv = annotationsSrv;\n\n    this.events.on('data-received', this.onDataReceived);\n    this.events.on('data-snapshot-load', this.onDataReceived);\n    this.events.on('data-error', this.onDataError);\n    this.events.on('init-edit-mode', this.onInitEditMode);\n    this.events.on('render', this.onRender);\n    this.events.on('refresh', this.postRefresh);\n    // custom event from rendering.js\n    this.events.on('render-complete', this.onRenderComplete);\n  }\n\n  onRenderComplete = (data) => {\n    this.graph.chartWidth = data.chartWidth;\n    this.renderingCompleted();\n  };\n\n  // override calculateInterval for discrete color mode\n  calculateInterval = () => {\n    let panelWidth = Math.ceil($(window).width() * (this.panel.gridPos.w / 24));\n    // approximate chartWidth because y axis ticks not rendered yet on first data receive.\n    let chartWidth = _.max([\n        panelWidth - 200,\n        panelWidth/2\n      ]);\n\n    let minCardWidth = this.panel.cards.cardMinWidth;\n    let minSpacing = this.panel.cards.cardHSpacing;\n    let maxCardsCount = Math.ceil((chartWidth-minCardWidth) / (minCardWidth + minSpacing));\n\n    let intervalMs;\n    let rangeMs = this.range.to.valueOf() - this.range.from.valueOf();\n\n    // this is minimal interval! kbn.round_interval will lower it.\n    intervalMs = this.discreteHelper.roundIntervalCeil(rangeMs / maxCardsCount);\n\n    // Calculate low limit of interval\n    let lowLimitMs = 1; // 1 millisecond default low limit\n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    if (intervalOverride) {\n      if (intervalOverride[0] === '>') {\n        intervalOverride = intervalOverride.slice(1);\n      }\n      lowLimitMs = kbn.interval_to_ms(intervalOverride);\n    }\n\n    if (lowLimitMs > intervalMs) {\n      intervalMs = lowLimitMs;\n    }\n\n    this.intervalMs = intervalMs;\n    this.interval = kbn.secondsToHms(intervalMs / 1000);\n  };\n\n  issueQueries = (datasource) => {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    /* Wait for annotationSrv requests to get datasources to\n     * resolve before issuing queries. This allows the annotations\n     * service to fire annotations queries before graph queries\n     * (but not wait for completion). This resolves\n     * issue 11806.\n     */\n    // 5.x before 5.4 doesn't have dataPromises\n    if (\"undefined\" !== typeof(this.annotationsSrv.datasourcePromises)) {\n      return this.annotationsSrv.datasourcePromises.then(r => {\n        return super.issueQueries(datasource);\n      });\n    } else {\n      return super.issueQueries(datasource);\n    }\n  }\n\n\n  onDataReceived = (dataList) => {\n    this.data      = dataList;\n    this.cardsData = this.convertToCards(this.data);\n\n    this.annotationsPromise.then(\n      result => {\n        this.loading = false;\n        //this.alertState = result.alertState;\n        if (result.annotations && result.annotations.length > 0) {\n          this.annotations = result.annotations;\n        } else {\n          this.annotations = null;\n        }\n        this.render();\n      },\n      () => {\n        this.loading = false;\n        this.annotations = null;\n        this.render();\n      }\n    );\n\n    //this.render();\n  };\n\n  onInitEditMode = () => {\n    this.addEditorTab('Options', statusHeatmapOptionsEditor, 2);\n    this.unitFormats = kbn.getUnitFormats();\n  };\n\n  onRender = () => {\n    if (!this.data) { return; }\n\n    this.multipleValues = false;\n    if (!this.panel.useMax) {\n      if (this.cardsData) {\n        this.multipleValues = this.cardsData.multipleValues;\n      }\n    }\n\n    this.noColorDefined = false;\n    if (this.panel.color.mode === 'discrete') {\n      this.discreteHelper.updateCardsValuesHasColorInfo();\n      if (this.cardsData) {\n        this.noColorDefined = this.cardsData.noColorDefined;\n      }\n    }\n  };\n\n  onCardColorChange = (newColor) => {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  };\n\n  onDataError = () => {\n    this.data = [];\n    this.annotations = [];\n    this.render();\n  };\n\n  postRefresh = () => {\n    this.noColorDefined = false;\n  };\n\n  onEditorAddThreshold = () => {\n    this.panel.color.thresholds.push({ color: this.panel.defaultColor });\n    this.render();\n  };\n\n  onEditorRemoveThreshold = (index) => {\n    this.panel.color.thresholds.splice(index, 1);\n    this.render();\n  };\n\n  onEditorRemoveThresholds = () => {\n    this.panel.color.thresholds = [];\n    this.render();\n  };\n\n  onEditorAddThreeLights = () => {\n    this.panel.color.thresholds.push({color: \"red\", value: 2, tooltip: \"error\" });\n    this.panel.color.thresholds.push({color: \"yellow\", value: 1, tooltip: \"warning\" });\n    this.panel.color.thresholds.push({color: \"green\", value: 0, tooltip: \"ok\" });\n    this.render();\n  };\n  \n  /* https://ethanschoonover.com/solarized/ */\n  onEditorAddSolarized = () => {\n    this.panel.color.thresholds.push({color: \"#b58900\", value: 0, tooltip: \"yellow\" });\n    this.panel.color.thresholds.push({color: \"#cb4b16\", value: 1, tooltip: \"orange\" });\n    this.panel.color.thresholds.push({color: \"#dc322f\", value: 2, tooltip: \"red\" });\n    this.panel.color.thresholds.push({color: \"#d33682\", value: 3, tooltip: \"magenta\" });\n    this.panel.color.thresholds.push({color: \"#6c71c4\", value: 4, tooltip: \"violet\" });\n    this.panel.color.thresholds.push({color: \"#268bd2\", value: 5, tooltip: \"blue\" });\n    this.panel.color.thresholds.push({color: \"#2aa198\", value: 6, tooltip: \"cyan\" });\n    this.panel.color.thresholds.push({color: \"#859900\", value: 7, tooltip: \"green\" });\n    this.render();\n  }\n\n  link = (scope, elem, attrs, ctrl) => {\n    rendering(scope, elem, attrs, ctrl);\n  };\n\n  // group values into buckets by target\n  convertToCards = (data) => {\n    let cardsData = {\n      cards: [],\n      xBucketSize: 0,\n      yBucketSize: 0,\n      maxValue: 0,\n      minValue: 0,\n      multipleValues: false,\n      noColorDefined: false,\n      targets: [], // array of available unique targets\n      targetIndex: {} // indices in data array for each of available unique targets\n    };\n\n    if (!data || data.length == 0) { return cardsData;}\n\n    // Collect uniq timestamps from data and spread over targets and timestamps\n\n    // collect uniq targets and their indices\n    _.map(data, (d, i) => {\n      cardsData.targetIndex[d.target] = _.concat(_.toArray(cardsData.targetIndex[d.target]), i)\n    });\n\n    // TODO add some logic for targets heirarchy\n    cardsData.targets = _.keys(cardsData.targetIndex);\n    cardsData.yBucketSize = cardsData.targets.length;\n    // Maximum number of buckets over x axis\n    cardsData.xBucketSize = _.max(_.map(data, d => d.datapoints.length));\n\n    // Collect all values for each bucket from datapoints with similar target.\n    // TODO aggregate values into buckets over datapoint[TIME_INDEX] not over datapoint index (j).\n    for(let i = 0; i < cardsData.targets.length; i++) {\n      let target = cardsData.targets[i];\n\n      for (let j = 0; j < cardsData.xBucketSize; j++) {\n        let card = {\n          id: i*cardsData.xBucketSize + j,\n          values: [],\n          multipleValues: false,\n          noColorDefined: false,\n          y: target,\n          x: -1,\n        };\n\n        // collect values from all timeseries with target\n        for (let si = 0; si < cardsData.targetIndex[target].length; si++) {\n          let s = data[cardsData.targetIndex[target][si]];\n          if (s.datapoints.length <= j) {\n            continue;\n          }\n          let datapoint = s.datapoints[j];\n          if (card.values.length === 0) {\n            card.x = datapoint[TIME_INDEX];\n          }\n          card.values.push(datapoint[VALUE_INDEX]);\n        }\n        card.minValue = _.min(card.values);\n        card.maxValue = _.max(card.values);\n        if (card.values.length > 1) {\n          cardsData.multipleValues = true;\n          card.multipleValues = true;\n          card.value = card.maxValue; // max value by default\n        } else {\n          card.value = card.maxValue; // max value by default\n        }\n\n        if (cardsData.maxValue < card.maxValue)\n          cardsData.maxValue = card.maxValue;\n\n        if (cardsData.minValue > card.minValue)\n          cardsData.minValue = card.minValue;\n\n        if (card.x != -1) {\n        cardsData.cards.push(card);\n        }\n      }\n    }\n\n    return cardsData;\n  };\n}\n"],"file":"status_heatmap_ctrl.js"}