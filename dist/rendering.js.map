{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","cardsData","timeRange","panel","heatmap","$heatmap","find","tooltip","StatusHeatmapTooltip","annotationTooltip","AnnotationTooltip","width","height","yScale","xScale","chartWidth","chartHeight","chartTop","chartBottom","yAxisWidth","xAxisHeight","cardVSpacing","cardHSpacing","cardRound","cardWidth","cardHeight","colorScale","opacityScale","mouseUpHandler","xGridSize","yGridSize","yOffset","selection","active","x1","x2","padding","left","right","top","bottom","margin","dataRangeWidingFactor","DATA_RANGE_WIDING_FACTOR","events","on","render","setElementHeight","row","_","isString","parseInt","replace","legend","show","css","e","getYAxisWidth","axis_text","selectAll","nodes","max_text_width","max","map","text","getBBox","Math","ceil","getXAxisHeight","axis_line","select","empty","axis_line_position","parseFloat","attr","canvas_width","addXAxis","d3","scaleTime","domain","from","to","range","ticks","DEFAULT_X_TICK_SIZE_PX","grafanaTimeFormatter","grafanaTimeFormat","timeFormat","dashboardTimeZone","dashboard","getTimezone","utcFormat","xAxis","axisBottom","tickFormat","tickPadding","X_AXIS_TICK_PADDING","tickSize","posY","posX","append","call","remove","getYScale","step","length","push","i","scaleOrdinal","getYAxisScale","addYAxis","uniq","d","target","isEmpty","yAxisSort","sort","a","b","localeCompare","ignorePunctuation","numeric","yAxisScale","yAxis","axisLeft","tickValues","tickSizeInner","Y_AXIS_TICK_PADDING","wideYAxisRange","min","tickInterval","y_widing","y_min","y_max","floor","tickValueFormatter","decimals","scaledDecimals","format","value","kbn","valueFormats","addHeatmapCanvas","heatmap_elem","cards","CARD_H_SPACING","CARD_V_SPACING","CARD_ROUND","yBucketSize","xBucketSize","style","addHeatmap","maxValue","color","minValue","mode","getColorScale","setOpacityScale","enter","c","id","getCardX","getCardWidth","getCardY","getCardHeight","getCardColor","getCardOpacity","$cards","event","mouseOverBucket","highlightCard","resetCardHighLight","_renderAnnotations","emit","highlightColor","darker","strokeColor","brighter","current_card","originalFillColor","colorScheme","colorSchemes","colorInterpolator","d3ScaleChromatic","colorScaleInverted","invert","contextSrv","user","lightTheme","start","end","scaleSequential","scaleLinear","scalePow","exponent","x","cx","w","cutted_width","MIN_CARD_SIZE","y","ys","h","cardColor","discreteHelper","getBucketColor","values","nullPointMode","getCardStrokeWidth","appEvents","drawSharedCrosshair","pos","clearCrosshair","onMouseDown","console","log","offsetX","onMouseUp","$","document","one","unbind","selectionRange","abs","MIN_SELECTION_WIDTH","timeFrom","timeTo","timeSrv","setTime","moment","utc","clearSelection","onMouseLeave","onMouseMove","destroy","limitSelection","drawSelection","emitGraphHoverEvet","drawCrosshair","valueOf","offsetY","pageX","pageY","y1","panelRelY","posX1","posX2","selectionX","selectionWidth","position","graphTooltip","annotations","annoData","time","source","anno","iconColor","join","$ticks","mouseOverAnnotationTick","secPerTick","oneDay","oneYear","tickStep","getScaledDecimals","getFlotTickSize","DEFAULT_Y_TICK_SIZE_PX"],"mappings":";;;;;;;AAsBe,WAASA,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACrD,QAAIC,aAAJ;AAAA,QAAUC,kBAAV;AAAA,QAAqBC,kBAArB;AAAA,QAAgCC,cAAhC;AAAA,QAAuCC,gBAAvC;;AAEA;AACA,QAAIC,WAAWR,KAAKS,IAAL,CAAU,uBAAV,CAAf;AACA,QAAIC,UAAU,IAAIC,oBAAJ,CAAyBH,QAAzB,EAAmCT,KAAnC,CAAd;AACA,QAAIa,oBAAoB,IAAIC,iBAAJ,CAAsBL,QAAtB,EAAgCT,KAAhC,CAAxB;;AAEA,QAAIe,cAAJ;AAAA,QAAWC,eAAX;AAAA,QACEC,eADF;AAAA,QACUC,eADV;AAAA,QAEEC,mBAFF;AAAA,QAEcC,oBAFd;AAAA,QAGEC,iBAHF;AAAA,QAGYC,oBAHZ;AAAA,QAIEC,mBAJF;AAAA,QAIcC,oBAJd;AAAA,QAKEC,qBALF;AAAA,QAKgBC,qBALhB;AAAA,QAK8BC,kBAL9B;AAAA,QAMEC,kBANF;AAAA,QAMaC,mBANb;AAAA,QAOEC,mBAPF;AAAA,QAOcC,qBAPd;AAAA,QAQEC,uBARF;AAAA,QASEC,kBATF;AAAA,QASaC,kBATb;;AAWA,QAAIC,UAAU,CAAd;;AAEA,QAAIC,YAAY;AACdC,cAAQ,KADM;AAEdC,UAAI,CAAC,CAFS;AAGdC,UAAI,CAAC;AAHS,KAAhB;;AAMA,QAAIC,UAAU,EAAEC,MAAM,CAAR,EAAWC,OAAO,CAAlB,EAAqBC,KAAK,CAA1B,EAA6BC,QAAQ,CAArC,EAAd;AAAA,QACEC,SAAS,EAAEJ,MAAM,EAAR,EAAYC,OAAO,EAAnB,EAAuBC,KAAK,EAA5B,EAAgCC,QAAQ,EAAxC,EADX;AAAA,QAEEE,wBAAwBC,wBAF1B;;AAIA5C,SAAK6C,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7BC;AACD,KAFD;;AAIA,aAASC,gBAAT,GAA4B;AAC1B,UAAI;AACF,YAAInC,SAASb,KAAKa,MAAL,IAAeT,MAAMS,MAArB,IAA+Bb,KAAKiD,GAAL,CAASpC,MAArD;AACA,YAAIqC,EAAEC,QAAF,CAAWtC,MAAX,CAAJ,EAAwB;AACtBA,mBAASuC,SAASvC,OAAOwC,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAT,EAAmC,EAAnC,CAAT;AACD;;AAEDxC,kBAAUT,MAAMkD,MAAN,CAAaC,IAAb,GAAoB,EAApB,GAAyB,EAAnC,CANE,CAMqC;;AAEvCjD,iBAASkD,GAAT,CAAa,QAAb,EAAuB3C,SAAS,IAAhC;;AAEA,eAAO,IAAP;AACD,OAXD,CAWE,OAAO4C,CAAP,EAAU;AAAE;AACZ,eAAO,KAAP;AACD;AACF;;AAED,aAASC,aAAT,CAAuB5D,IAAvB,EAA6B;AAC3B,UAAI6D,YAAY7D,KAAK8D,SAAL,CAAe,cAAf,EAA+BC,KAA/B,EAAhB;AACA,UAAIC,iBAAiBZ,EAAEa,GAAF,CAAMb,EAAEc,GAAF,CAAML,SAAN,EAAiB,gBAAQ;AAClD;AACA,eAAOM,KAAKC,OAAL,GAAetD,KAAtB;AACD,OAH0B,CAAN,CAArB;;AAKA,aAAOuD,KAAKC,IAAL,CAAUN,cAAV,CAAP;AACD;;AAED,aAASO,cAAT,CAAwBvE,IAAxB,EAA8B;AAC5B,UAAIwE,YAAYxE,KAAKyE,MAAL,CAAY,cAAZ,CAAhB;AACA,UAAI,CAACD,UAAUE,KAAV,EAAL,EAAwB;AACtB,YAAIC,qBAAqBC,WAAW5E,KAAKyE,MAAL,CAAY,cAAZ,EAA4BI,IAA5B,CAAiC,IAAjC,CAAX,CAAzB;AACA,YAAIC,eAAeF,WAAW5E,KAAK6E,IAAL,CAAU,QAAV,CAAX,CAAnB;AACA,eAAOC,eAAeH,kBAAtB;AACD,OAJD,MAIO;AACL;AACA,eAAO,EAAP;AACD;AACF;;AAED,aAASI,QAAT,GAAoB;AAClB;AACAhF,YAAMkB,MAAN,GAAeA,SAAS+D,GAAGC,SAAH,GACrBC,MADqB,CACd,CAAC7E,UAAU8E,IAAX,EAAiB9E,UAAU+E,EAA3B,CADc,EAErBC,KAFqB,CAEf,CAACrD,YAAY,CAAb,EAAgBd,aAAac,YAAY,CAAzC,CAFe,CAAxB;;AAIA,UAAIsD,QAAQpE,aAAaqE,sBAAzB;AACA,UAAIC,uBAAuBC,kBAAkBH,KAAlB,EAAyBjF,UAAU8E,IAAnC,EAAyC9E,UAAU+E,EAAnD,CAA3B;AACA,UAAIM,mBAAJ;AACA,UAAIC,oBAAoBzF,KAAK0F,SAAL,CAAeC,WAAf,EAAxB;AACA,UAAIF,sBAAsB,KAA1B,EAAiC;AAC/BD,qBAAaV,GAAGc,SAAH,CAAaN,oBAAb,CAAb;AACD,OAFD,MAEO;AACLE,qBAAaV,GAAGU,UAAH,CAAcF,oBAAd,CAAb;AACD;;AAED,UAAIO,QAAQf,GAAGgB,UAAH,CAAc/E,MAAd,EACTqE,KADS,CACHA,KADG,EAETW,UAFS,CAEEP,UAFF,EAGTQ,WAHS,CAGGC,mBAHH,EAITC,QAJS,CAIAjF,WAJA,CAAZ;;AAMA,UAAIkF,OAAOjF,QAAX;AACA,UAAIkF,OAAOhF,UAAX;;AAEAf,cAAQgG,MAAR,CAAe,GAAf,EACG1B,IADH,CACQ,OADR,EACiB,aADjB,EAEGA,IAFH,CAEQ,WAFR,EAEqB,eAAeyB,IAAf,GAAsB,GAAtB,GAA4BD,IAA5B,GAAmC,GAFxD,EAGGG,IAHH,CAGQT,KAHR;;AAKA;AACAxF,cAAQkE,MAAR,CAAe,SAAf,EAA0BA,MAA1B,CAAiC,SAAjC,EAA4CgC,MAA5C;AACD;;AAED;AACA,aAASC,SAAT,CAAmBpB,KAAnB,EAA0B;AACxB,UAAID,QAAQ,EAAZ;AACA,UAAIsB,OAAOxF,cAAcmE,MAAMsB,MAA/B;AACA;AACAvB,YAAMwB,IAAN,CAAWF,IAAX;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIxB,MAAMsB,MAA1B,EAAkCE,GAAlC,EAAuC;AACrCzB,cAAMwB,IAAN,CAAWF,QAAQG,IAAI,CAAZ,CAAX;AACD;AACD,aAAO9B,GAAG+B,YAAH,GACJ7B,MADI,CACGI,KADH,EAEJD,KAFI,CAEEA,KAFF,CAAP;AAGD;;AAED;AACA,aAAS2B,aAAT,CAAuB1B,KAAvB,EAA8B;AAC5B,UAAID,QAAQ,EAAZ;AACA,UAAIsB,OAAOxF,cAAcmE,MAAMsB,MAA/B;AACA;AACAvB,YAAMwB,IAAN,CAAW3E,OAAX;AACA,WAAK,IAAI4E,IAAI,CAAb,EAAgBA,IAAIxB,MAAMsB,MAA1B,EAAkCE,GAAlC,EAAuC;AACrCzB,cAAMwB,IAAN,CAAWF,OAAOG,CAAP,GAAW5E,OAAtB;AACD;AACD,aAAO8C,GAAG+B,YAAH,GACJ7B,MADI,CACGI,KADH,EAEJD,KAFI,CAEEA,KAFF,CAAP;AAGD;;AAED,aAAS4B,QAAT,GAAoB;AAClB,UAAI3B,QAAQlC,EAAE8D,IAAF,CAAO9D,EAAEc,GAAF,CAAM/D,IAAN,EAAY;AAAA,eAAKgH,EAAEC,MAAP;AAAA,OAAZ,CAAP,CAAZ;;AAEA;AACA,UAAIhE,EAAEiE,OAAF,CAAUlH,IAAV,CAAJ,EAAqB;AACnBmF,gBAAQ,CAAC,EAAD,CAAR;AACD;;AAED,UAAIhF,MAAMgH,SAAN,IAAmB,OAAvB,EAAgC;AAC9BhC,cAAMiC,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,EAAEE,aAAF,CAAgBD,CAAhB,EAAmB,IAAnB,EAAyB,EAAEE,mBAAmB,KAArB,EAA4BC,SAAS,IAArC,EAAzB,CAAV;AAAA,SAAX;AACD,OAFD,MAEO,IAAItH,MAAMgH,SAAN,IAAmB,OAAvB,EAAgC;AACrChC,cAAMiC,IAAN,CAAW,UAACE,CAAD,EAAID,CAAJ;AAAA,iBAAUA,EAAEE,aAAF,CAAgBD,CAAhB,EAAmB,IAAnB,EAAyB,EAAEE,mBAAmB,KAArB,EAA4BC,SAAS,IAArC,EAAzB,CAAV;AAAA,SAAX;AACD;;AAED,UAAIC,aAAab,cAAc1B,KAAd,CAAjB;AACAvF,YAAMiB,MAAN,GAAeA,SAAS0F,UAAUpB,KAAV,CAAxB;;AAEA,UAAIwC,QAAQ9C,GAAG+C,QAAH,CAAYF,UAAZ,EACTG,UADS,CACE1C,KADF,EAET2C,aAFS,CAEK,IAAInH,KAFT,EAGToF,WAHS,CAGGgC,mBAHH,CAAZ;;AAKA3H,cAAQgG,MAAR,CAAe,GAAf,EACG1B,IADH,CACQ,OADR,EACiB,aADjB,EAEG2B,IAFH,CAEQsB,KAFR;;AAIA;AACA,UAAIzB,OAAOzD,OAAOF,GAAlB;AACA,UAAI4D,OAAO1C,cAAcrD,OAAd,IAAyB2H,mBAApC;AACA3H,cAAQkE,MAAR,CAAe,SAAf,EAA0BI,IAA1B,CAA+B,WAA/B,EAA4C,eAAeyB,IAAf,GAAsB,GAAtB,GAA4BD,IAA5B,GAAmC,GAA/E;;AAEA;AACA9F,cAAQkE,MAAR,CAAe,SAAf,EAA0BA,MAA1B,CAAiC,SAAjC,EAA4CgC,MAA5C;AACAlG,cAAQkE,MAAR,CAAe,SAAf,EAA0BX,SAA1B,CAAoC,YAApC,EAAkD2C,MAAlD;AACD;;AAED;AACA,aAAS0B,cAAT,CAAwBC,GAAxB,EAA6BnE,GAA7B,EAAkCoE,YAAlC,EAAgD;AAC9C,UAAIC,WAAW,CAACrE,OAAOpB,wBAAwB,CAA/B,IAAoCuF,OAAOvF,wBAAwB,CAA/B,CAArC,IAA0E,CAAzF;AACA,UAAI0F,cAAJ;AAAA,UAAWC,cAAX;;AAEA,UAAIH,iBAAiB,CAArB,EAAwB;AACtBG,gBAAQvE,MAAMpB,qBAAd;AACA0F,gBAAQH,MAAMA,OAAOvF,wBAAwB,CAA/B,CAAd;AACAwF,uBAAe,CAACG,QAAQD,KAAT,IAAkB,CAAjC;AACD,OAJD,MAIO;AACLC,gBAAQnE,KAAKC,IAAL,CAAU,CAACL,MAAMqE,QAAP,IAAmBD,YAA7B,IAA6CA,YAArD;AACAE,gBAAQlE,KAAKoE,KAAL,CAAW,CAACL,MAAME,QAAP,IAAmBD,YAA9B,IAA8CA,YAAtD;AACD;;AAED;AACA,UAAID,OAAO,CAAP,IAAYG,QAAQ,CAAxB,EAA2B;AACzBA,gBAAQ,CAAR;AACD;;AAED,aAAO,EAAEA,YAAF,EAASC,YAAT,EAAP;AACD;;AAED,aAASE,kBAAT,CAA4BC,QAA5B,EAA6D;AAAA,UAAvBC,cAAuB,uEAAN,IAAM;;AAC3D,UAAIC,SAASvI,MAAMwH,KAAN,CAAYe,MAAzB;AACA,aAAO,UAAUC,KAAV,EAAiB;AACtB,eAAOC,IAAIC,YAAJ,CAAiBH,MAAjB,EAAyBC,KAAzB,EAAgCH,QAAhC,EAA0CC,cAA1C,CAAP;AACD,OAFD;AAGD;;AAED;AACA;AACA,aAASK,gBAAT,GAA4B;AAC1B,UAAIC,eAAe1I,SAAS,CAAT,CAAnB;;AAEAM,cAAQuD,KAAKoE,KAAL,CAAWjI,SAASM,KAAT,EAAX,IAA+ByB,QAAQE,KAA/C;AACA1B,eAASsD,KAAKoE,KAAL,CAAWjI,SAASO,MAAT,EAAX,IAAgCwB,QAAQI,MAAjD;;AAEA,UAAIpC,OAAJ,EAAa;AACXA,gBAAQkG,MAAR;AACD;;AAEDlG,gBAAUyE,GAAGP,MAAH,CAAUyE,YAAV,EACP3C,MADO,CACA,KADA,EAEP1B,IAFO,CAEF,OAFE,EAEO/D,KAFP,EAGP+D,IAHO,CAGF,QAHE,EAGQ9D,MAHR,CAAV;;AAKAI,oBAAcJ,SAAS6B,OAAOF,GAAhB,GAAsBE,OAAOD,MAA3C;AACAvB,iBAAWwB,OAAOF,GAAlB;AACArB,oBAAcD,WAAWD,WAAzB;;AAEAM,qBAAenB,MAAM6I,KAAN,CAAY1H,YAAZ,KAA6B,IAA7B,GAAoCnB,MAAM6I,KAAN,CAAY1H,YAAhD,GAA+D2H,cAA9E;AACA5H,qBAAelB,MAAM6I,KAAN,CAAY3H,YAAZ,KAA6B,IAA7B,GAAoClB,MAAM6I,KAAN,CAAY3H,YAAhD,GAA+D6H,cAA9E;AACA3H,kBAAYpB,MAAM6I,KAAN,CAAYzH,SAAZ,KAA0B,IAA1B,GAAiCpB,MAAM6I,KAAN,CAAYzH,SAA7C,GAAyD4H,UAArE;;AAEA;AACArH,kBAAYoC,KAAKoE,KAAL,CAAWtH,cAAcf,UAAUmJ,WAAnC,CAAZ;AACA3H,mBAAaK,YAAYA,YAAYT,YAAxB,GAAuC,CAApD;AACAU,gBAAUN,aAAa,CAAvB;;AAEAqF;;AAEA3F,mBAAasC,cAAcrD,OAAd,IAAyB2H,mBAAtC;AACAhH,mBAAaJ,QAAQQ,UAAR,GAAqBsB,OAAOH,KAAzC;;AAEA;AACA;AACAT,kBAAYd,cAAcd,UAAUoJ,WAAV,GAAwB,CAAtC,CAAZ;AACA7H,kBAAYK,YAAYP,YAAxB;;AAEAsD;AACAxD,oBAAcgD,eAAehE,OAAf,CAAd;;AAEA,UAAI,CAACD,MAAMwH,KAAN,CAAYrE,IAAjB,EAAuB;AACrBlD,gBAAQkE,MAAR,CAAe,SAAf,EAA0BX,SAA1B,CAAoC,MAApC,EAA4C2F,KAA5C,CAAkD,SAAlD,EAA6D,CAA7D;AACD;;AAED,UAAI,CAACnJ,MAAMyF,KAAN,CAAYtC,IAAjB,EAAuB;AACrBlD,gBAAQkE,MAAR,CAAe,SAAf,EAA0BX,SAA1B,CAAoC,MAApC,EAA4C2F,KAA5C,CAAkD,SAAlD,EAA6D,CAA7D;AACD;AACF;;AAED,aAASC,UAAT,GAAsB;AACpBT;;AAEA,UAAIU,WAAWrJ,MAAMsJ,KAAN,CAAY3F,GAAZ,IAAmB7D,UAAUuJ,QAA5C;AACA,UAAIE,WAAWvJ,MAAMsJ,KAAN,CAAYxB,GAAZ,IAAmBhI,UAAUyJ,QAA5C;;AAEA,UAAIvJ,MAAMsJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AACnCjI,qBAAakI,cAAcJ,QAAd,EAAwBE,QAAxB,CAAb;AACD;AACDG,sBAAgBL,QAAhB;;AAEA,UAAIR,QAAQ5I,QAAQuD,SAAR,CAAkB,sBAAlB,EAA0C3D,IAA1C,CAA+CC,UAAU+I,KAAzD,CAAZ;AACAA,YAAM5C,MAAN,CAAa,OAAb;AACA4C,cAAQA,MAAMc,KAAN,GAAc1D,MAAd,CAAqB,MAArB,EACL1B,IADK,CACA,QADA,EACU;AAAA,eAAKqF,EAAEC,EAAP;AAAA,OADV,EAELtF,IAFK,CAEA,GAFA,EAEKuF,QAFL,EAGLvF,IAHK,CAGA,OAHA,EAGSwF,YAHT,EAILxF,IAJK,CAIA,GAJA,EAIKyF,QAJL,EAKLzF,IALK,CAKA,QALA,EAKU0F,aALV,EAML1F,IANK,CAMA,IANA,EAMMnD,SANN,EAOLmD,IAPK,CAOA,IAPA,EAOMnD,SAPN,EAQLmD,IARK,CAQA,OARA,EAQS,8BART,EASL4E,KATK,CASC,MATD,EASSe,YATT,EAULf,KAVK,CAUC,QAVD,EAUWe,YAVX,EAWLf,KAXK,CAWC,cAXD,EAWiB,CAXjB;AAYN;AACA;AAbM,OAcLA,KAdK,CAcC,SAdD,EAcYgB,cAdZ,CAAR;;AAgBA,UAAIC,SAASlK,SAASC,IAAT,CAAc,sBAAd,CAAb;AACAiK,aAAO1H,EAAP,CAAU,YAAV,EAAwB,UAAC2H,KAAD,EAAW;AACjCjK,gBAAQkK,eAAR,GAA0B,IAA1B;AACAC,sBAAcF,KAAd;AACD,OAHD,EAIG3H,EAJH,CAIM,YAJN,EAIoB,UAAC2H,KAAD,EAAW;AAC3BjK,gBAAQkK,eAAR,GAA0B,KAA1B;AACAE,2BAAmBH,KAAnB;AACD,OAPH;;AASAI;;AAEA7K,WAAK6C,MAAL,CAAYiI,IAAZ,CAAiB,iBAAjB,EAAoC;AAClC,sBAAc9J;AADoB,OAApC;AAGD;;AAED,aAAS2J,aAAT,CAAuBF,KAAvB,EAA8B;AAC5B,UAAIf,QAAQ5E,GAAGP,MAAH,CAAUkG,MAAMvD,MAAhB,EAAwBqC,KAAxB,CAA8B,MAA9B,CAAZ;AACA,UAAIwB,iBAAiBjG,GAAG4E,KAAH,CAASA,KAAT,EAAgBsB,MAAhB,CAAuB,CAAvB,CAArB;AACA,UAAIC,cAAcnG,GAAG4E,KAAH,CAASA,KAAT,EAAgBwB,QAAhB,CAAyB,CAAzB,CAAlB;AACA,UAAIC,eAAerG,GAAGP,MAAH,CAAUkG,MAAMvD,MAAhB,CAAnB;AACA1G,cAAQ4K,iBAAR,GAA4B1B,KAA5B;AACAyB,mBAAa5B,KAAb,CAAmB,MAAnB,EAA2BwB,cAA3B,EACGxB,KADH,CACS,QADT,EACmB0B,WADnB,EAEG1B,KAFH,CAES,cAFT,EAEyB,CAFzB;AAGD;;AAED,aAASqB,kBAAT,CAA4BH,KAA5B,EAAmC;AACjC3F,SACGP,MADH,CACUkG,MAAMvD,MADhB,EAEGqC,KAFH,CAES,MAFT,EAEiB/I,QAAQ4K,iBAFzB,EAGG7B,KAHH,CAGS,QAHT,EAGmB/I,QAAQ4K,iBAH3B,EAIG7B,KAJH,CAIS,cAJT,EAIyB,CAJzB;AAKD;;AAED,aAASM,aAAT,CAAuBJ,QAAvB,EAA+C;AAAA,UAAdE,QAAc,uEAAH,CAAG;;AAC7C,UAAI0B,cAAcnI,EAAE3C,IAAF,CAAOP,KAAKsL,YAAZ,EAA0B,EAAE1C,OAAOxI,MAAMsJ,KAAN,CAAY2B,WAArB,EAA1B,CAAlB;AACA,UAAIE,oBAAoBC,iBAAiBH,YAAYzC,KAA7B,CAAxB;AACA,UAAI6C,qBAAqBJ,YAAYK,MAAZ,KAAuB,QAAvB,IACtBL,YAAYK,MAAZ,KAAuB,MAAvB,IAAiC,CAACC,WAAWC,IAAX,CAAgBC,UADrD;;AAGA,UAAIpC,YAAYE,QAAhB,EACEF,WAAWE,WAAW,CAAtB;;AAEF,UAAImC,QAAQL,qBAAqBhC,QAArB,GAAgCE,QAA5C;AACA,UAAIoC,MAAMN,qBAAqB9B,QAArB,GAAgCF,QAA1C;;AAEA,aAAO3E,GAAGkH,eAAH,CAAmBT,iBAAnB,EAAsCvG,MAAtC,CAA6C,CAAC8G,KAAD,EAAQC,GAAR,CAA7C,CAAP;AACD;;AAED,aAASjC,eAAT,CAAyBL,QAAzB,EAAmC;AACjC,UAAIrJ,MAAMsJ,KAAN,CAAY/H,UAAZ,KAA2B,QAA/B,EAAyC;AACvCC,uBAAekD,GAAGmH,WAAH,GACZjH,MADY,CACL,CAAC,CAAD,EAAIyE,QAAJ,CADK,EAEZtE,KAFY,CAEN,CAAC,CAAD,EAAI,CAAJ,CAFM,CAAf;AAGD,OAJD,MAIO,IAAI/E,MAAMsJ,KAAN,CAAY/H,UAAZ,KAA2B,MAA/B,EAAuC;AAC5CC,uBAAekD,GAAGoH,QAAH,GAAcC,QAAd,CAAuB/L,MAAMsJ,KAAN,CAAYyC,QAAnC,EACZnH,MADY,CACL,CAAC,CAAD,EAAIyE,QAAJ,CADK,EAEZtE,KAFY,CAEN,CAAC,CAAD,EAAI,CAAJ,CAFM,CAAf;AAGD;AACF;;AAED,aAAS+E,QAAT,CAAkBjD,CAAlB,EAAqB;AACnB,UAAImF,UAAJ;AACA;AACA,UAAIC,KAAKtL,OAAOkG,EAAEmF,CAAT,CAAT;;AAEA,UAAIC,KAAK5K,YAAY,CAAjB,GAAqB,CAAzB,EAA4B;AAC1B2K,YAAIhL,aAAaG,eAAe,CAAhC;AACD,OAFD,MAEO;AACL6K,YAAIhL,aAAaiL,EAAb,GAAkB5K,YAAY,CAAlC;AACD;;AAED,aAAO2K,CAAP;AACD;;AAED;AACA,aAASjC,YAAT,CAAsBlD,CAAtB,EAAyB;AACvB,UAAIqF,UAAJ;AACA,UAAID,KAAKtL,OAAOkG,EAAEmF,CAAT,CAAT;;AAEA,UAAIC,KAAK5K,YAAY,CAArB,EAAwB;AACtB;AACA;AACA,YAAI8K,eAAgBF,KAAK9K,eAAe,CAArB,GAA0BE,YAAY,CAAzD;AACA6K,YAAIC,eAAe,CAAf,GAAmBA,YAAnB,GAAkC,CAAtC;AACD,OALD,MAKO,IAAIvL,aAAaqL,EAAb,GAAkB5K,YAAY,CAAlC,EAAqC;AAC1C;AACA6K,YAAI7K,YAAY,CAAZ,IAAiBT,aAAaqL,EAAb,GAAkB9K,eAAe,CAAlD,CAAJ;AACD,OAHM,MAGA;AACL+K,YAAI7K,SAAJ;AACD;;AAED;AACA6K,UAAInI,KAAKJ,GAAL,CAASuI,CAAT,EAAYE,aAAZ,CAAJ;;AAEA,UAAIjL,gBAAgB,CAApB,EAAuB;AACrB+K,YAAIA,IAAI,CAAR;AACD;;AAED,aAAOA,CAAP;AACD;;AAED,aAASlC,QAAT,CAAkBnD,CAAlB,EAAqB;AACnB,aAAOnG,OAAOmG,EAAEwF,CAAT,IAAcvL,QAAd,GAAyBQ,UAAzB,GAAsCJ,eAAe,CAA5D;AACD;;AAED,aAAS+I,aAAT,CAAuBpD,CAAvB,EAA0B;AACxB,UAAIyF,KAAK5L,OAAOmG,EAAEwF,CAAT,CAAT;AACA,UAAIA,IAAIC,KAAKxL,QAAL,GAAgBQ,UAAhB,GAA6BJ,eAAe,CAApD;AACA,UAAIqL,IAAIjL,UAAR;;AAEA;AACA,UAAI+K,IAAIvL,QAAR,EAAkB;AAChByL,YAAID,KAAKpL,eAAe,CAAxB;AACD,OAFD,MAEO,IAAIoL,KAAKvL,WAAT,EAAsB;AAC3BwL,YAAIxL,cAAcsL,CAAlB;AACD,OAFM,MAEA,IAAIA,IAAI/K,UAAJ,GAAiBP,WAArB,EAAkC;AACvCwL,YAAIxL,cAAcsL,CAAlB;AACD;;AAED;AACAE,UAAIxI,KAAK+D,GAAL,CAASyE,CAAT,EAAY1L,WAAZ,CAAJ;AACA;AACA0L,UAAIxI,KAAKJ,GAAL,CAAS4I,CAAT,EAAYH,aAAZ,CAAJ;;AAEA,UAAIlL,gBAAgB,CAApB,EAAuB;AACrBqL,YAAIA,IAAI,CAAR;AACD;;AAED,aAAOA,CAAP;AACD;;AAED,aAASrC,YAAT,CAAsBrD,CAAtB,EAAyB;AACvB,UAAI7G,MAAMsJ,KAAN,CAAYE,IAAZ,KAAqB,SAAzB,EAAoC;AAClC,eAAOxJ,MAAMsJ,KAAN,CAAYkD,SAAnB;AACD,OAFD,MAEO,IAAIxM,MAAMsJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AAC1C,eAAOjI,WAAWsF,EAAE2B,KAAb,CAAP;AACD,OAFM,MAEA,IAAIxI,MAAMsJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AAC1C,eAAO5J,KAAK6M,cAAL,CAAoBC,cAApB,CAAmC7F,EAAE8F,MAArC,CAAP;AACD;AACF;;AAED,aAASxC,cAAT,CAAwBtD,CAAxB,EAA2B;AACzB,UAAI7G,MAAM4M,aAAN,KAAwB,UAAxB,IAAsC/F,EAAE2B,KAAF,IAAW,IAArD,EAA2D;AACzD,eAAO,CAAP;AACD;AACD,UAAIxI,MAAMsJ,KAAN,CAAYE,IAAZ,KAAqB,SAAzB,EAAoC;AAClC,eAAOhI,aAAaqF,EAAE2B,KAAf,CAAP;AACD,OAFD,MAEO;AACL,eAAO,CAAP;AACD;AACF;;AAED,aAASqE,kBAAT,CAA4BhG,CAA5B,EAA+B;AAC7B,UAAI7G,MAAMsJ,KAAN,CAAYE,IAAZ,KAAqB,UAAzB,EAAqC;AACnC,eAAO,GAAP;AACD;AACD,aAAO,GAAP;AACD;;AAED;AACA;AACA;;AAEA;AACAsD,cAAUpK,EAAV,CAAa,aAAb,EAA4B,iBAAS;AACnCqK,0BAAoB1C,MAAM2C,GAA1B;AACD,KAFD,EAEGvN,KAFH;;AAIAqN,cAAUpK,EAAV,CAAa,mBAAb,EAAkC,YAAM;AACtCuK;AACD,KAFD,EAEGxN,KAFH;;AAIA,aAASyN,WAAT,CAAqB7C,KAArB,EAA4B;AAC1B8C,cAAQC,GAAR,CAAY,YAAZ;AACAvL,gBAAUC,MAAV,GAAmB,IAAnB;AACAD,gBAAUE,EAAV,GAAesI,MAAMgD,OAArB;;AAEA5L,uBAAiB,0BAAY;AAC3B6L;AACD,OAFD;;AAIAC,QAAEC,QAAF,EAAYC,GAAZ,CAAgB,SAAhB,EAA2BhM,cAA3B;AACD;;AAED,aAAS6L,SAAT,GAAqB;AACnBC,QAAEC,QAAF,EAAYE,MAAZ,CAAmB,SAAnB,EAA8BjM,cAA9B;AACAA,uBAAiB,IAAjB;AACAI,gBAAUC,MAAV,GAAmB,KAAnB;;AAEA,UAAI6L,iBAAiB5J,KAAK6J,GAAL,CAAS/L,UAAUG,EAAV,GAAeH,UAAUE,EAAlC,CAArB;AACA,UAAIF,UAAUG,EAAV,IAAgB,CAAhB,IAAqB2L,iBAAiBE,mBAA1C,EAA+D;AAC7D,YAAIC,WAAWnN,OAAO2K,MAAP,CAAcvH,KAAK+D,GAAL,CAASjG,UAAUE,EAAnB,EAAuBF,UAAUG,EAAjC,IAAuChB,UAAvC,GAAoDU,YAAY,CAA9E,CAAf;AACA,YAAIqM,SAASpN,OAAO2K,MAAP,CAAcvH,KAAKJ,GAAL,CAAS9B,UAAUE,EAAnB,EAAuBF,UAAUG,EAAjC,IAAuChB,UAAvC,GAAoDU,YAAY,CAA9E,CAAb;;AAEA9B,aAAKoO,OAAL,CAAaC,OAAb,CAAqB;AACnBpJ,gBAAMqJ,OAAOC,GAAP,CAAWL,QAAX,CADa;AAEnBhJ,cAAIoJ,OAAOC,GAAP,CAAWJ,MAAX;AAFe,SAArB;AAID;;AAEDK;AACD;;AAED,aAASC,YAAT,GAAwB;AACtBvB,gBAAUpC,IAAV,CAAe,mBAAf;AACAuC;AACA;AACD;;AAED,aAASqB,WAAT,CAAqBjE,KAArB,EAA4B;AAC1B,UAAI,CAACpK,OAAL,EAAc;AAAE;AAAS;;AAEzB,UAAI4B,UAAUC,MAAd,EAAsB;AACpB;AACAmL;AACA7M,gBAAQmO,OAAR;AACAjO,0BAAkBiO,OAAlB;;AAEA1M,kBAAUG,EAAV,GAAewM,eAAenE,MAAMgD,OAArB,CAAf;AACAoB,sBAAc5M,UAAUE,EAAxB,EAA4BF,UAAUG,EAAtC;AACD,OARD,MAQO;AACL0M,2BAAmBrE,KAAnB;AACAsE,sBAActE,MAAMgD,OAApB;AACAjN,gBAAQ+C,IAAR,CAAakH,KAAb,EAHK,CAGgB;AACrB/J,0BAAkB6C,IAAlB,CAAuBkH,KAAvB;AACD;AACF;;AAED,aAASqE,kBAAT,CAA4BrE,KAA5B,EAAmC;AACjC,UAAI2B,IAAIrL,OAAO2K,MAAP,CAAcjB,MAAMgD,OAAN,GAAgBrM,UAAhB,GAA6BU,YAAY,CAAvD,EAA0DkN,OAA1D,EAAR;AACA,UAAIvC,IAAI3L,OAAO2J,MAAMwE,OAAb,CAAR;AACA,UAAI7B,MAAM;AACR8B,eAAOzE,MAAMyE,KADL;AAERC,eAAO1E,MAAM0E,KAFL;AAGR/C,WAAGA,CAHK,EAGFjK,IAAIiK,CAHF;AAIRK,WAAGA,CAJK,EAIF2C,IAAI3C,CAJF;AAKR4C,mBAAW;AALH,OAAV;;AAQA;AACAjC,UAAIiC,SAAJ,GAAgBlL,KAAKJ,GAAL,CAAS0G,MAAMwE,OAAN,GAAgBpO,MAAzB,EAAiC,KAAjC,CAAhB;;AAEA;AACAqM,gBAAUpC,IAAV,CAAe,aAAf,EAA8B,EAAEsC,KAAKA,GAAP,EAAYhN,OAAOA,KAAnB,EAA9B;AACD;;AAED,aAASwO,cAAT,CAAwBxM,EAAxB,EAA4B;AAC1BA,WAAK+B,KAAKJ,GAAL,CAAS3B,EAAT,EAAahB,UAAb,CAAL;AACAgB,WAAK+B,KAAK+D,GAAL,CAAS9F,EAAT,EAAapB,aAAaI,UAA1B,CAAL;AACA,aAAOgB,EAAP;AACD;;AAED,aAASyM,aAAT,CAAuBS,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,UAAIlP,OAAJ,EAAa;AACXA,gBAAQuD,SAAR,CAAkB,2BAAlB,EAA+C2C,MAA/C;AACA,YAAIiJ,aAAarL,KAAK+D,GAAL,CAASoH,KAAT,EAAgBC,KAAhB,CAAjB;AACA,YAAIE,iBAAiBtL,KAAK6J,GAAL,CAASsB,QAAQC,KAAjB,CAArB;;AAEA,YAAIE,iBAAiBxB,mBAArB,EAA0C;AACxC5N,kBAAQgG,MAAR,CAAe,MAAf,EACG1B,IADH,CACQ,OADR,EACiB,0BADjB,EAEGA,IAFH,CAEQ,GAFR,EAEa6K,UAFb,EAGG7K,IAHH,CAGQ,OAHR,EAGiB8K,cAHjB,EAIG9K,IAJH,CAIQ,GAJR,EAIazD,QAJb,EAKGyD,IALH,CAKQ,QALR,EAKkB1D,WALlB;AAMD;AACF;AACF;;AAED,aAASuN,cAAT,GAA0B;AACxBvM,gBAAUE,EAAV,GAAe,CAAC,CAAhB;AACAF,gBAAUG,EAAV,GAAe,CAAC,CAAhB;;AAEA,UAAI/B,OAAJ,EAAa;AACXA,gBAAQuD,SAAR,CAAkB,2BAAlB,EAA+C2C,MAA/C;AACD;AACF;;AAED,aAASwI,aAAT,CAAuBW,QAAvB,EAAiC;AAC/B,UAAIrP,OAAJ,EAAa;AACXA,gBAAQuD,SAAR,CAAkB,2BAAlB,EAA+C2C,MAA/C;;AAEA,YAAIH,OAAOsJ,QAAX;AACAtJ,eAAOjC,KAAKJ,GAAL,CAASqC,IAAT,EAAehF,UAAf,CAAP;AACAgF,eAAOjC,KAAK+D,GAAL,CAAS9B,IAAT,EAAepF,aAAaI,UAA5B,CAAP;;AAEAf,gBAAQgG,MAAR,CAAe,GAAf,EACG1B,IADH,CACQ,OADR,EACiB,0BADjB,EAEGA,IAFH,CAEQ,WAFR,EAEqB,eAAeyB,IAAf,GAAsB,KAF3C,EAGGC,MAHH,CAGU,MAHV,EAIG1B,IAJH,CAIQ,IAJR,EAIc,CAJd,EAKGA,IALH,CAKQ,IALR,EAKczD,QALd,EAMGyD,IANH,CAMQ,IANR,EAMc,CANd,EAOGA,IAPH,CAOQ,IAPR,EAOcxD,WAPd,EAQGwD,IARH,CAQQ,cARR,EAQwB,CARxB;AASD;AACF;;AAED;AACA,aAASwI,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,UAAI/M,WAAWL,KAAK0F,SAAL,CAAeiK,YAAf,KAAgC,CAA/C,EAAkD;AAChD,YAAIvJ,OAAOrF,OAAOqM,IAAIhB,CAAX,IAAgBhL,UAA3B;AACA2N,sBAAc3I,IAAd;AACD;AACF;;AAED,aAASiH,cAAT,GAA0B;AACxB,UAAIhN,OAAJ,EAAa;AACXA,gBAAQuD,SAAR,CAAkB,2BAAlB,EAA+C2C,MAA/C;AACD;AACF;;AAED,aAASxD,MAAT,GAAkB;AAChB9C,aAAOD,KAAKC,IAAZ;AACAG,cAAQJ,KAAKI,KAAb;AACAD,kBAAYH,KAAKmF,KAAjB;AACAjF,kBAAYF,KAAKE,SAAjB;;AAEA,UAAI,CAACD,IAAD,IAAS,CAACC,SAAV,IAAuB,CAAC8C,kBAA5B,EAAgD;AAC9C;AACD;;AAED;AACA,UAAIE,EAAEiE,OAAF,CAAUjH,UAAU+I,KAApB,CAAJ,EAAgC;AAC9BF;AACA;AACD;;AAEDS;AACA3J,YAAMuB,UAAN,GAAmBA,UAAnB;AACAvB,YAAMwB,WAAN,GAAoBA,WAApB;AACAxB,YAAMoB,WAAN,GAAoBA,WAApB;AACApB,YAAMmB,UAAN,GAAmBA,UAAnB;AACAnB,YAAMqB,QAAN,GAAiBA,QAAjB;AACD;;AAED;AACAZ,aAASwC,EAAT,CAAY,WAAZ,EAAyBwK,WAAzB;AACAhN,aAASwC,EAAT,CAAY,WAAZ,EAAyB4L,WAAzB;AACApO,aAASwC,EAAT,CAAY,YAAZ,EAA0B2L,YAA1B;;AAEA,aAAS5D,kBAAT,GAA8B;AAC5B,UAAI,CAAC7K,KAAK4P,WAAN,IAAqB5P,KAAK4P,WAAL,CAAiBlJ,MAAjB,IAA2B,CAApD,EAAuD;AACrD;AACD;;AAED,UAAI,CAACrG,OAAL,EAAc;AACZ;AACD;;AAED,UAAIwP,WAAW3M,EAAEc,GAAF,CAAMhE,KAAK4P,WAAX,EAAwB,UAAC3I,CAAD,EAAIL,CAAJ;AAAA,eAAW,EAAE,KAAKzC,KAAKoE,KAAL,CAAWnH,aAAaL,OAAOkG,EAAE6I,IAAT,CAAxB,CAAP,EAAgD,MAAMlJ,CAAtD,EAAyD,QAAQK,EAAE8I,MAAnE,EAAX;AAAA,OAAxB,CAAf;;AAGA,UAAIC,OAAO3P,QACRgG,MADQ,CACD,GADC,EAER1B,IAFQ,CAEH,OAFG,EAEM,uBAFN,EAGRA,IAHQ,CAGH,WAHG,EAGU,kBAHV,EAIRf,SAJQ,CAIE,wBAJF,EAKR3D,IALQ,CAKH4P,QALG,EAMR9F,KANQ,GAMA1D,MANA,CAMO,GANP,CAAX;AAQA2J,WAAK3J,MAAL,CAAY,MAAZ;AACE;AADF,OAEG1B,IAFH,CAEQ,IAFR,EAEc;AAAA,eAAKsC,EAAEmF,CAAP;AAAA,OAFd,EAGGzH,IAHH,CAGQ,IAHR,EAGczD,QAHd,EAIGyD,IAJH,CAIQ,IAJR,EAIc;AAAA,eAAKsC,EAAEmF,CAAP;AAAA,OAJd,EAKGzH,IALH,CAKQ,IALR,EAKcxD,WALd,EAMGoI,KANH,CAMS,QANT,EAMmB;AAAA,eAAKtC,EAAE+I,IAAF,CAAOC,SAAZ;AAAA,OANnB,EAOG1G,KAPH,CAOS,cAPT,EAOyB,CAPzB,EAQGA,KARH,CAQS,kBART,EAQ6B,KAR7B;AAUAyG,WAAK3J,MAAL,CAAY,SAAZ,EACG1B,IADH,CACQ,QADR,EACkB;AAAA,eAAK,CAAC,CAACsC,EAAEmF,CAAH,EAAMjL,cAAc,CAApB,CAAD,EAAyB,CAAC8F,EAAEmF,CAAF,GAAM,CAAP,EAAUjL,cAAc,CAAxB,CAAzB,EAAqD,CAAC8F,EAAEmF,CAAF,GAAM,CAAP,EAAUjL,cAAc,CAAxB,CAArD,EAAiF+O,IAAjF,CAAsF,GAAtF,CAAL;AAAA,OADlB,EAEG3G,KAFH,CAES,cAFT,EAEyB,CAFzB,EAGGA,KAHH,CAGS,MAHT,EAGiB;AAAA,eAAKtC,EAAE+I,IAAF,CAAOC,SAAZ;AAAA,OAHjB;AAKA;AACAD,WAAK3J,MAAL,CAAY,MAAZ,EACG1B,IADH,CACQ,GADR,EACa;AAAA,eAAKsC,EAAEmF,CAAF,GAAM,CAAX;AAAA,OADb,EAEGzH,IAFH,CAEQ,OAFR,EAEiB,EAFjB,EAGGA,IAHH,CAGQ,GAHR,EAGaxD,cAAc,CAH3B,EAIGwD,IAJH,CAIQ,QAJR,EAIkB,CAJlB,EAKGA,IALH,CAKQ,OALR,EAKiB,2BALjB,EAMGA,IANH,CAMQ,QANR,EAMkB;AAAA,eAAKsC,EAAEgD,EAAP;AAAA,OANlB,EAOGV,KAPH,CAOS,SAPT,EAOoB,CAPpB;;AAUA,UAAI4G,SAAS7P,SAASC,IAAT,CAAc,4BAAd,CAAb;AACA4P,aAAOrN,EAAP,CAAU,YAAV,EAAwB,UAAC2H,KAAD,EAAW;AACjC/J,0BAAkB0P,uBAAlB,GAA4C,IAA5C;AACD,OAFD,EAGGtN,EAHH,CAGM,YAHN,EAGoB,UAAC2H,KAAD,EAAW;AAC3B/J,0BAAkB0P,uBAAlB,GAA4C,KAA5C;AACD,OALH;AAOD;AACF;;qBAzqBuBxQ,I;;AA2qBxB,WAAS2F,iBAAT,CAA2BH,KAA3B,EAAkC8C,GAAlC,EAAuCnE,GAAvC,EAA4C;AAC1C,QAAImE,OAAOnE,GAAP,IAAcqB,KAAlB,EAAyB;AACvB,UAAID,QAAQpB,MAAMmE,GAAlB;AACA,UAAImI,aAAclL,QAAQC,KAAT,GAAkB,IAAnC;AACA,UAAIkL,SAAS,QAAb;AACA,UAAIC,UAAU,WAAd;;AAEA,UAAIF,cAAc,EAAlB,EAAsB;AACpB,eAAO,UAAP;AACD;AACD,UAAIA,cAAc,IAAd,IAAsBlL,SAASmL,MAAnC,EAA2C;AACzC,eAAO,OAAP;AACD;AACD,UAAID,cAAc,KAAlB,EAAyB;AACvB,eAAO,aAAP;AACD;AACD,UAAIA,cAAc,OAAd,IAAyBlL,SAASoL,OAAtC,EAA+C;AAC7C,eAAO,OAAP;AACD;AACD,aAAO,OAAP;AACD;;AAED,WAAO,OAAP;AACD;;;AAxtBMrN,O;;AACAyK,O;;AACAW,Y;;AACAzF,S;;AACEqE,e,gBAAAA,S;AAAWvB,gB,gBAAAA,U;;AACX6E,c,sBAAAA,Q;AAAUC,uB,sBAAAA,iB;AAAmBC,qB,sBAAAA,e;;AAC/B5L,Q;;AACK0G,sB;;AACH/K,0B,YAAAA,oB;;AACAE,uB,gBAAAA,iB;;;AAEL6L,mB,GAAgB,C;AAClBtD,oB,GAAiB,C;AACjBC,oB,GAAiB,C;AACjBC,gB,GAAa,C;AACbxG,8B,GAA2B,G;AAC3ByC,4B,GAAyB,G;AACzBsL,4B,GAAyB,E;AACzB1K,yB,GAAsB,E;AACtB+B,yB,GAAsB,C;AACtBiG,yB,GAAsB,C","file":"rendering.js","sourcesContent":["import _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport moment from 'moment';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport { appEvents, contextSrv } from 'app/core/core';\r\nimport { tickStep, getScaledDecimals, getFlotTickSize } from 'app/core/utils/ticks';\r\nimport d3 from 'd3';\r\nimport * as d3ScaleChromatic from './libs/d3-scale-chromatic/index';\r\nimport { StatusHeatmapTooltip } from './tooltip';\r\nimport { AnnotationTooltip } from './annotations';\r\n\r\nlet MIN_CARD_SIZE = 5,\r\n  CARD_H_SPACING = 2,\r\n  CARD_V_SPACING = 2,\r\n  CARD_ROUND = 0,\r\n  DATA_RANGE_WIDING_FACTOR = 1.2,\r\n  DEFAULT_X_TICK_SIZE_PX = 100,\r\n  DEFAULT_Y_TICK_SIZE_PX = 50,\r\n  X_AXIS_TICK_PADDING = 10,\r\n  Y_AXIS_TICK_PADDING = 5,\r\n  MIN_SELECTION_WIDTH = 2;\r\n\r\nexport default function link(scope, elem, attrs, ctrl) {\r\n  let data, cardsData, timeRange, panel, heatmap;\r\n\r\n  // $heatmap is JQuery object, but heatmap is D3\r\n  let $heatmap = elem.find('.status-heatmap-panel');\r\n  let tooltip = new StatusHeatmapTooltip($heatmap, scope);\r\n  let annotationTooltip = new AnnotationTooltip($heatmap, scope);\r\n\r\n  let width, height,\r\n    yScale, xScale,\r\n    chartWidth, chartHeight,\r\n    chartTop, chartBottom,\r\n    yAxisWidth, xAxisHeight,\r\n    cardVSpacing, cardHSpacing, cardRound,\r\n    cardWidth, cardHeight,\r\n    colorScale, opacityScale,\r\n    mouseUpHandler,\r\n    xGridSize, yGridSize;\r\n\r\n  let yOffset = 0;\r\n\r\n  let selection = {\r\n    active: false,\r\n    x1: -1,\r\n    x2: -1\r\n  };\r\n\r\n  let padding = { left: 0, right: 0, top: 0, bottom: 0 },\r\n    margin = { left: 25, right: 15, top: 10, bottom: 20 },\r\n    dataRangeWidingFactor = DATA_RANGE_WIDING_FACTOR;\r\n\r\n  ctrl.events.on('render', () => {\r\n    render();\r\n  });\r\n\r\n  function setElementHeight() {\r\n    try {\r\n      var height = ctrl.height || panel.height || ctrl.row.height;\r\n      if (_.isString(height)) {\r\n        height = parseInt(height.replace('px', ''), 10);\r\n      }\r\n\r\n      height -= panel.legend.show ? 32 : 10; // bottom padding and space for legend. Change margin in .status-heatmap-color-legend !\r\n\r\n      $heatmap.css('height', height + 'px');\r\n\r\n      return true;\r\n    } catch (e) { // IE throws errors sometimes\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function getYAxisWidth(elem) {\r\n    let axis_text = elem.selectAll(\".axis-y text\").nodes();\r\n    let max_text_width = _.max(_.map(axis_text, text => {\r\n      // Use SVG getBBox method\r\n      return text.getBBox().width;\r\n    }));\r\n\r\n    return Math.ceil(max_text_width);\r\n  }\r\n\r\n  function getXAxisHeight(elem) {\r\n    let axis_line = elem.select(\".axis-x line\");\r\n    if (!axis_line.empty()) {\r\n      let axis_line_position = parseFloat(elem.select(\".axis-x line\").attr(\"y2\"));\r\n      let canvas_width = parseFloat(elem.attr(\"height\"));\r\n      return canvas_width - axis_line_position;\r\n    } else {\r\n      // Default height\r\n      return 30;\r\n    }\r\n  }\r\n\r\n  function addXAxis() {\r\n    // Scale timestamps to cards centers\r\n    scope.xScale = xScale = d3.scaleTime()\r\n      .domain([timeRange.from, timeRange.to])\r\n      .range([xGridSize / 2, chartWidth - xGridSize / 2]);\r\n\r\n    let ticks = chartWidth / DEFAULT_X_TICK_SIZE_PX;\r\n    let grafanaTimeFormatter = grafanaTimeFormat(ticks, timeRange.from, timeRange.to);\r\n    let timeFormat;\r\n    let dashboardTimeZone = ctrl.dashboard.getTimezone();\r\n    if (dashboardTimeZone === 'utc') {\r\n      timeFormat = d3.utcFormat(grafanaTimeFormatter);\r\n    } else {\r\n      timeFormat = d3.timeFormat(grafanaTimeFormatter);\r\n    }\r\n\r\n    let xAxis = d3.axisBottom(xScale)\r\n      .ticks(ticks)\r\n      .tickFormat(timeFormat)\r\n      .tickPadding(X_AXIS_TICK_PADDING)\r\n      .tickSize(chartHeight);\r\n\r\n    let posY = chartTop;\r\n    let posX = yAxisWidth;\r\n\r\n    heatmap.append(\"g\")\r\n      .attr(\"class\", \"axis axis-x\")\r\n      .attr(\"transform\", \"translate(\" + posX + \",\" + posY + \")\")\r\n      .call(xAxis);\r\n\r\n    // Remove horizontal line in the top of axis labels (called domain in d3)\r\n    heatmap.select(\".axis-x\").select(\".domain\").remove();\r\n  }\r\n\r\n  // divide chart height by ticks for cards drawing\r\n  function getYScale(ticks) {\r\n    let range = [];\r\n    let step = chartHeight / ticks.length;\r\n    // svg has y=0 on the top, so top card should have a minimal value in range\r\n    range.push(step);\r\n    for (let i = 1; i < ticks.length; i++) {\r\n      range.push(step * (i + 1));\r\n    }\r\n    return d3.scaleOrdinal()\r\n      .domain(ticks)\r\n      .range(range);\r\n  }\r\n\r\n  // divide chart height by ticks with offset for ticks drawing\r\n  function getYAxisScale(ticks) {\r\n    let range = [];\r\n    let step = chartHeight / ticks.length;\r\n    // svg has y=0 on the top, so top tick should have a minimal value in range\r\n    range.push(yOffset);\r\n    for (let i = 1; i < ticks.length; i++) {\r\n      range.push(step * i + yOffset);\r\n    }\r\n    return d3.scaleOrdinal()\r\n      .domain(ticks)\r\n      .range(range);\r\n  }\r\n\r\n  function addYAxis() {\r\n    let ticks = _.uniq(_.map(data, d => d.target));\r\n\r\n    // Set default Y min and max if no data\r\n    if (_.isEmpty(data)) {\r\n      ticks = [''];\r\n    }\r\n\r\n    if (panel.yAxisSort == 'a → z') {\r\n      ticks.sort((a, b) => a.localeCompare(b, 'en', { ignorePunctuation: false, numeric: true }));\r\n    } else if (panel.yAxisSort == 'z → a') {\r\n      ticks.sort((b, a) => a.localeCompare(b, 'en', { ignorePunctuation: false, numeric: true }));\r\n    }\r\n\r\n    let yAxisScale = getYAxisScale(ticks);\r\n    scope.yScale = yScale = getYScale(ticks);\r\n\r\n    let yAxis = d3.axisLeft(yAxisScale)\r\n      .tickValues(ticks)\r\n      .tickSizeInner(0 - width)\r\n      .tickPadding(Y_AXIS_TICK_PADDING);\r\n\r\n    heatmap.append(\"g\")\r\n      .attr(\"class\", \"axis axis-y\")\r\n      .call(yAxis);\r\n\r\n    // Calculate Y axis width first, then move axis into visible area\r\n    let posY = margin.top;\r\n    let posX = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\r\n    heatmap.select(\".axis-y\").attr(\"transform\", \"translate(\" + posX + \",\" + posY + \")\");\r\n\r\n    // Remove vertical line in the right of axis labels (called domain in d3)\r\n    heatmap.select(\".axis-y\").select(\".domain\").remove();\r\n    heatmap.select(\".axis-y\").selectAll(\".tick line\").remove();\r\n  }\r\n\r\n  // Wide Y values range and adjust to bucket size\r\n  function wideYAxisRange(min, max, tickInterval) {\r\n    let y_widing = (max * (dataRangeWidingFactor - 1) - min * (dataRangeWidingFactor - 1)) / 2;\r\n    let y_min, y_max;\r\n\r\n    if (tickInterval === 0) {\r\n      y_max = max * dataRangeWidingFactor;\r\n      y_min = min - min * (dataRangeWidingFactor - 1);\r\n      tickInterval = (y_max - y_min) / 2;\r\n    } else {\r\n      y_max = Math.ceil((max + y_widing) / tickInterval) * tickInterval;\r\n      y_min = Math.floor((min - y_widing) / tickInterval) * tickInterval;\r\n    }\r\n\r\n    // Don't wide axis below 0 if all values are positive\r\n    if (min >= 0 && y_min < 0) {\r\n      y_min = 0;\r\n    }\r\n\r\n    return { y_min, y_max };\r\n  }\r\n\r\n  function tickValueFormatter(decimals, scaledDecimals = null) {\r\n    let format = panel.yAxis.format;\r\n    return function (value) {\r\n      return kbn.valueFormats[format](value, decimals, scaledDecimals);\r\n    };\r\n  }\r\n\r\n  // Create svg element, add axes and\r\n  // calculate sizes for cards drawing\r\n  function addHeatmapCanvas() {\r\n    let heatmap_elem = $heatmap[0];\r\n\r\n    width = Math.floor($heatmap.width()) - padding.right;\r\n    height = Math.floor($heatmap.height()) - padding.bottom;\r\n\r\n    if (heatmap) {\r\n      heatmap.remove();\r\n    }\r\n\r\n    heatmap = d3.select(heatmap_elem)\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height);\r\n\r\n    chartHeight = height - margin.top - margin.bottom;\r\n    chartTop = margin.top;\r\n    chartBottom = chartTop + chartHeight;\r\n\r\n    cardHSpacing = panel.cards.cardHSpacing !== null ? panel.cards.cardHSpacing : CARD_H_SPACING;\r\n    cardVSpacing = panel.cards.cardVSpacing !== null ? panel.cards.cardVSpacing : CARD_V_SPACING;\r\n    cardRound = panel.cards.cardRound !== null ? panel.cards.cardRound : CARD_ROUND;\r\n\r\n    // calculate yOffset for YAxis\r\n    yGridSize = Math.floor(chartHeight / cardsData.yBucketSize);\r\n    cardHeight = yGridSize ? yGridSize - cardVSpacing : 0;\r\n    yOffset = cardHeight / 2;\r\n\r\n    addYAxis();\r\n\r\n    yAxisWidth = getYAxisWidth(heatmap) + Y_AXIS_TICK_PADDING;\r\n    chartWidth = width - yAxisWidth - margin.right;\r\n\r\n    // TODO allow per-y cardWidth!\r\n    // we need to fill chartWidth with xBucketSize cards.\r\n    xGridSize = chartWidth / (cardsData.xBucketSize + 1);\r\n    cardWidth = xGridSize - cardHSpacing;\r\n\r\n    addXAxis();\r\n    xAxisHeight = getXAxisHeight(heatmap);\r\n\r\n    if (!panel.yAxis.show) {\r\n      heatmap.select(\".axis-y\").selectAll(\"line\").style(\"opacity\", 0);\r\n    }\r\n\r\n    if (!panel.xAxis.show) {\r\n      heatmap.select(\".axis-x\").selectAll(\"line\").style(\"opacity\", 0);\r\n    }\r\n  }\r\n\r\n  function addHeatmap() {\r\n    addHeatmapCanvas();\r\n\r\n    let maxValue = panel.color.max || cardsData.maxValue;\r\n    let minValue = panel.color.min || cardsData.minValue;\r\n\r\n    if (panel.color.mode !== 'discrete') {\r\n      colorScale = getColorScale(maxValue, minValue);\r\n    }\r\n    setOpacityScale(maxValue);\r\n\r\n    let cards = heatmap.selectAll(\".status-heatmap-card\").data(cardsData.cards);\r\n    cards.append(\"title\");\r\n    cards = cards.enter().append(\"rect\")\r\n      .attr(\"cardId\", c => c.id)\r\n      .attr(\"x\", getCardX)\r\n      .attr(\"width\", getCardWidth)\r\n      .attr(\"y\", getCardY)\r\n      .attr(\"height\", getCardHeight)\r\n      .attr(\"rx\", cardRound)\r\n      .attr(\"ry\", cardRound)\r\n      .attr(\"class\", \"bordered status-heatmap-card\")\r\n      .style(\"fill\", getCardColor)\r\n      .style(\"stroke\", getCardColor)\r\n      .style(\"stroke-width\", 0)\r\n      //.style(\"stroke-width\", getCardStrokeWidth)\r\n      //.style(\"stroke-dasharray\", \"3,3\")\r\n      .style(\"opacity\", getCardOpacity);\r\n\r\n    let $cards = $heatmap.find(\".status-heatmap-card\");\r\n    $cards.on(\"mouseenter\", (event) => {\r\n      tooltip.mouseOverBucket = true;\r\n      highlightCard(event);\r\n    })\r\n      .on(\"mouseleave\", (event) => {\r\n        tooltip.mouseOverBucket = false;\r\n        resetCardHighLight(event);\r\n      });\r\n\r\n    _renderAnnotations();\r\n\r\n    ctrl.events.emit('render-complete', {\r\n      \"chartWidth\": chartWidth\r\n    });\r\n  }\r\n\r\n  function highlightCard(event) {\r\n    let color = d3.select(event.target).style(\"fill\");\r\n    let highlightColor = d3.color(color).darker(2);\r\n    let strokeColor = d3.color(color).brighter(4);\r\n    let current_card = d3.select(event.target);\r\n    tooltip.originalFillColor = color;\r\n    current_card.style(\"fill\", highlightColor)\r\n      .style(\"stroke\", strokeColor)\r\n      .style(\"stroke-width\", 1);\r\n  }\r\n\r\n  function resetCardHighLight(event) {\r\n    d3\r\n      .select(event.target)\r\n      .style(\"fill\", tooltip.originalFillColor)\r\n      .style(\"stroke\", tooltip.originalFillColor)\r\n      .style(\"stroke-width\", 0);\r\n  }\r\n\r\n  function getColorScale(maxValue, minValue = 0) {\r\n    let colorScheme = _.find(ctrl.colorSchemes, { value: panel.color.colorScheme });\r\n    let colorInterpolator = d3ScaleChromatic[colorScheme.value];\r\n    let colorScaleInverted = colorScheme.invert === 'always' ||\r\n      (colorScheme.invert === 'dark' && !contextSrv.user.lightTheme);\r\n\r\n    if (maxValue == minValue)\r\n      maxValue = minValue + 1;\r\n\r\n    let start = colorScaleInverted ? maxValue : minValue;\r\n    let end = colorScaleInverted ? minValue : maxValue;\r\n\r\n    return d3.scaleSequential(colorInterpolator).domain([start, end]);\r\n  }\r\n\r\n  function setOpacityScale(maxValue) {\r\n    if (panel.color.colorScale === 'linear') {\r\n      opacityScale = d3.scaleLinear()\r\n        .domain([0, maxValue])\r\n        .range([0, 1]);\r\n    } else if (panel.color.colorScale === 'sqrt') {\r\n      opacityScale = d3.scalePow().exponent(panel.color.exponent)\r\n        .domain([0, maxValue])\r\n        .range([0, 1]);\r\n    }\r\n  }\r\n\r\n  function getCardX(d) {\r\n    let x;\r\n    // cx is the center of the card. Card should be placed to the left.\r\n    let cx = xScale(d.x);\r\n\r\n    if (cx - cardWidth / 2 < 0) {\r\n      x = yAxisWidth + cardHSpacing / 2;\r\n    } else {\r\n      x = yAxisWidth + cx - cardWidth / 2;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n  // xScale returns card center. Adjust cardWidth in case of overlaping.\r\n  function getCardWidth(d) {\r\n    let w;\r\n    let cx = xScale(d.x);\r\n\r\n    if (cx < cardWidth / 2) {\r\n      // Center should not exceed half of card.\r\n      // Cut card to the left to prevent overlay of y axis.\r\n      let cutted_width = (cx - cardHSpacing / 2) + cardWidth / 2;\r\n      w = cutted_width > 0 ? cutted_width : 0;\r\n    } else if (chartWidth - cx < cardWidth / 2) {\r\n      // Cut card to the right to prevent overlay of right graph edge.\r\n      w = cardWidth / 2 + (chartWidth - cx - cardHSpacing / 2);\r\n    } else {\r\n      w = cardWidth;\r\n    }\r\n\r\n    // Card width should be MIN_CARD_SIZE at least\r\n    w = Math.max(w, MIN_CARD_SIZE);\r\n\r\n    if (cardHSpacing == 0) {\r\n      w = w + 1;\r\n    }\r\n\r\n    return w;\r\n  }\r\n\r\n  function getCardY(d) {\r\n    return yScale(d.y) + chartTop - cardHeight - cardVSpacing / 2;\r\n  }\r\n\r\n  function getCardHeight(d) {\r\n    let ys = yScale(d.y);\r\n    let y = ys + chartTop - cardHeight - cardVSpacing / 2;\r\n    let h = cardHeight;\r\n\r\n    // Cut card height to prevent overlay\r\n    if (y < chartTop) {\r\n      h = ys - cardVSpacing / 2;\r\n    } else if (ys > chartBottom) {\r\n      h = chartBottom - y;\r\n    } else if (y + cardHeight > chartBottom) {\r\n      h = chartBottom - y;\r\n    }\r\n\r\n    // Height can't be more than chart height\r\n    h = Math.min(h, chartHeight);\r\n    // Card height should be MIN_CARD_SIZE at least\r\n    h = Math.max(h, MIN_CARD_SIZE);\r\n\r\n    if (cardVSpacing == 0) {\r\n      h = h + 1\r\n    }\r\n\r\n    return h;\r\n  }\r\n\r\n  function getCardColor(d) {\r\n    if (panel.color.mode === 'opacity') {\r\n      return panel.color.cardColor;\r\n    } else if (panel.color.mode === 'spectrum') {\r\n      return colorScale(d.value);\r\n    } else if (panel.color.mode === 'discrete') {\r\n      return ctrl.discreteHelper.getBucketColor(d.values);\r\n    }\r\n  }\r\n\r\n  function getCardOpacity(d) {\r\n    if (panel.nullPointMode === 'as empty' && d.value == null) {\r\n      return 0;\r\n    }\r\n    if (panel.color.mode === 'opacity') {\r\n      return opacityScale(d.value);\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  function getCardStrokeWidth(d) {\r\n    if (panel.color.mode === 'discrete') {\r\n      return '1';\r\n    }\r\n    return '0';\r\n  }\r\n\r\n  /////////////////////////////\r\n  // Selection and crosshair //\r\n  /////////////////////////////\r\n\r\n  // Shared crosshair and tooltip\r\n  appEvents.on('graph-hover', event => {\r\n    drawSharedCrosshair(event.pos);\r\n  }, scope);\r\n\r\n  appEvents.on('graph-hover-clear', () => {\r\n    clearCrosshair();\r\n  }, scope);\r\n\r\n  function onMouseDown(event) {\r\n    console.log(\"mouse down\");\r\n    selection.active = true;\r\n    selection.x1 = event.offsetX;\r\n\r\n    mouseUpHandler = function () {\r\n      onMouseUp();\r\n    };\r\n\r\n    $(document).one(\"mouseup\", mouseUpHandler);\r\n  }\r\n\r\n  function onMouseUp() {\r\n    $(document).unbind(\"mouseup\", mouseUpHandler);\r\n    mouseUpHandler = null;\r\n    selection.active = false;\r\n\r\n    let selectionRange = Math.abs(selection.x2 - selection.x1);\r\n    if (selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\r\n      let timeFrom = xScale.invert(Math.min(selection.x1, selection.x2) - yAxisWidth - xGridSize / 2);\r\n      let timeTo = xScale.invert(Math.max(selection.x1, selection.x2) - yAxisWidth - xGridSize / 2);\r\n\r\n      ctrl.timeSrv.setTime({\r\n        from: moment.utc(timeFrom),\r\n        to: moment.utc(timeTo)\r\n      });\r\n    }\r\n\r\n    clearSelection();\r\n  }\r\n\r\n  function onMouseLeave() {\r\n    appEvents.emit('graph-hover-clear');\r\n    clearCrosshair();\r\n    //annotationTooltip.destroy();\r\n  }\r\n\r\n  function onMouseMove(event) {\r\n    if (!heatmap) { return; }\r\n\r\n    if (selection.active) {\r\n      // Clear crosshair and tooltip\r\n      clearCrosshair();\r\n      tooltip.destroy();\r\n      annotationTooltip.destroy();\r\n\r\n      selection.x2 = limitSelection(event.offsetX);\r\n      drawSelection(selection.x1, selection.x2);\r\n    } else {\r\n      emitGraphHoverEvet(event);\r\n      drawCrosshair(event.offsetX);\r\n      tooltip.show(event); //, data);\r\n      annotationTooltip.show(event);\r\n    }\r\n  }\r\n\r\n  function emitGraphHoverEvet(event) {\r\n    let x = xScale.invert(event.offsetX - yAxisWidth - xGridSize / 2).valueOf();\r\n    let y = yScale(event.offsetY);\r\n    let pos = {\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      x: x, x1: x,\r\n      y: y, y1: y,\r\n      panelRelY: null\r\n    };\r\n\r\n    // Set minimum offset to prevent showing legend from another panel\r\n    pos.panelRelY = Math.max(event.offsetY / height, 0.001);\r\n\r\n    // broadcast to other graph panels that we are hovering\r\n    appEvents.emit('graph-hover', { pos: pos, panel: panel });\r\n  }\r\n\r\n  function limitSelection(x2) {\r\n    x2 = Math.max(x2, yAxisWidth);\r\n    x2 = Math.min(x2, chartWidth + yAxisWidth);\r\n    return x2;\r\n  }\r\n\r\n  function drawSelection(posX1, posX2) {\r\n    if (heatmap) {\r\n      heatmap.selectAll(\".status-heatmap-selection\").remove();\r\n      let selectionX = Math.min(posX1, posX2);\r\n      let selectionWidth = Math.abs(posX1 - posX2);\r\n\r\n      if (selectionWidth > MIN_SELECTION_WIDTH) {\r\n        heatmap.append(\"rect\")\r\n          .attr(\"class\", \"status-heatmap-selection\")\r\n          .attr(\"x\", selectionX)\r\n          .attr(\"width\", selectionWidth)\r\n          .attr(\"y\", chartTop)\r\n          .attr(\"height\", chartHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearSelection() {\r\n    selection.x1 = -1;\r\n    selection.x2 = -1;\r\n\r\n    if (heatmap) {\r\n      heatmap.selectAll(\".status-heatmap-selection\").remove();\r\n    }\r\n  }\r\n\r\n  function drawCrosshair(position) {\r\n    if (heatmap) {\r\n      heatmap.selectAll(\".status-heatmap-crosshair\").remove();\r\n\r\n      let posX = position;\r\n      posX = Math.max(posX, yAxisWidth);\r\n      posX = Math.min(posX, chartWidth + yAxisWidth);\r\n\r\n      heatmap.append(\"g\")\r\n        .attr(\"class\", \"status-heatmap-crosshair\")\r\n        .attr(\"transform\", \"translate(\" + posX + \",0)\")\r\n        .append(\"line\")\r\n        .attr(\"x1\", 1)\r\n        .attr(\"y1\", chartTop)\r\n        .attr(\"x2\", 1)\r\n        .attr(\"y2\", chartBottom)\r\n        .attr(\"stroke-width\", 1);\r\n    }\r\n  }\r\n\r\n  // map time to X\r\n  function drawSharedCrosshair(pos) {\r\n    if (heatmap && ctrl.dashboard.graphTooltip !== 0) {\r\n      let posX = xScale(pos.x) + yAxisWidth;\r\n      drawCrosshair(posX);\r\n    }\r\n  }\r\n\r\n  function clearCrosshair() {\r\n    if (heatmap) {\r\n      heatmap.selectAll(\".status-heatmap-crosshair\").remove();\r\n    }\r\n  }\r\n\r\n  function render() {\r\n    data = ctrl.data;\r\n    panel = ctrl.panel;\r\n    timeRange = ctrl.range;\r\n    cardsData = ctrl.cardsData;\r\n\r\n    if (!data || !cardsData || !setElementHeight()) {\r\n      return;\r\n    }\r\n\r\n    // Draw default axes and return if no data\r\n    if (_.isEmpty(cardsData.cards)) {\r\n      addHeatmapCanvas();\r\n      return;\r\n    }\r\n\r\n    addHeatmap();\r\n    scope.yAxisWidth = yAxisWidth;\r\n    scope.xAxisHeight = xAxisHeight;\r\n    scope.chartHeight = chartHeight;\r\n    scope.chartWidth = chartWidth;\r\n    scope.chartTop = chartTop;\r\n  }\r\n\r\n  // Register selection listeners\r\n  $heatmap.on(\"mousedown\", onMouseDown);\r\n  $heatmap.on(\"mousemove\", onMouseMove);\r\n  $heatmap.on(\"mouseleave\", onMouseLeave);\r\n\r\n  function _renderAnnotations() {\r\n    if (!ctrl.annotations || ctrl.annotations.length == 0) {\r\n      return;\r\n    }\r\n\r\n    if (!heatmap) {\r\n      return;\r\n    }\r\n\r\n    let annoData = _.map(ctrl.annotations, (d, i) => ({ \"x\": Math.floor(yAxisWidth + xScale(d.time)), \"id\": i, \"anno\": d.source }));\r\n\r\n\r\n    let anno = heatmap\r\n      .append(\"g\")\r\n      .attr(\"class\", \"statusmap-annotations\")\r\n      .attr(\"transform\", \"translate(0.5,0)\")\r\n      .selectAll(\".statusmap-annotations\")\r\n      .data(annoData)\r\n      .enter().append(\"g\")\r\n      ;\r\n    anno.append(\"line\")\r\n      //.attr(\"class\", \"statusmap-annotation-tick\")\r\n      .attr(\"x1\", d => d.x)\r\n      .attr(\"y1\", chartTop)\r\n      .attr(\"x2\", d => d.x)\r\n      .attr(\"y2\", chartBottom)\r\n      .style(\"stroke\", d => d.anno.iconColor)\r\n      .style(\"stroke-width\", 1)\r\n      .style(\"stroke-dasharray\", \"3,3\")\r\n      ;\r\n    anno.append(\"polygon\")\r\n      .attr(\"points\", d => [[d.x, chartBottom + 1], [d.x - 5, chartBottom + 6], [d.x + 5, chartBottom + 6]].join(\" \"))\r\n      .style(\"stroke-width\", 0)\r\n      .style(\"fill\", d => d.anno.iconColor)\r\n      ;\r\n    // Polygons didn't fire mouseevents\r\n    anno.append(\"rect\")\r\n      .attr(\"x\", d => d.x - 5)\r\n      .attr(\"width\", 10)\r\n      .attr(\"y\", chartBottom + 1)\r\n      .attr(\"height\", 5)\r\n      .attr(\"class\", \"statusmap-annotation-tick\")\r\n      .attr(\"annoId\", d => d.id)\r\n      .style(\"opacity\", 0)\r\n      ;\r\n\r\n    let $ticks = $heatmap.find(\".statusmap-annotation-tick\");\r\n    $ticks.on(\"mouseenter\", (event) => {\r\n      annotationTooltip.mouseOverAnnotationTick = true;\r\n    })\r\n      .on(\"mouseleave\", (event) => {\r\n        annotationTooltip.mouseOverAnnotationTick = false;\r\n      });\r\n\r\n  }\r\n}\r\n\r\nfunction grafanaTimeFormat(ticks, min, max) {\r\n  if (min && max && ticks) {\r\n    let range = max - min;\r\n    let secPerTick = (range / ticks) / 1000;\r\n    let oneDay = 86400000;\r\n    let oneYear = 31536000000;\r\n\r\n    if (secPerTick <= 45) {\r\n      return \"%H:%M:%S\";\r\n    }\r\n    if (secPerTick <= 7200 || range <= oneDay) {\r\n      return \"%H:%M\";\r\n    }\r\n    if (secPerTick <= 80000) {\r\n      return \"%m/%d %H:%M\";\r\n    }\r\n    if (secPerTick <= 2419200 || range <= oneYear) {\r\n      return \"%m/%d\";\r\n    }\r\n    return \"%Y-%m\";\r\n  }\r\n\r\n  return \"%H:%M\";\r\n}\r\n"]}